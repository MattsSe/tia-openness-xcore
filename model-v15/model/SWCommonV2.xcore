@Ecore(nsURI="platform:/resource/model-v15/schemas/SW.Common_v2.xsd")
@ExtendedMetaData(qualified="false")
@GenModel(modelDirectory="/model-v15/src", modelPluginID="model-v15", modelName="Openness",
	importerID="org.eclipse.emf.importer.ecore")
package SWCommonV2

import org.eclipse.emf.ecore.EFeatureMapEntry
import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EStringToStringMapEntry
import org.eclipse.emf.ecore.xml.^type.AnySimpleType
import org.eclipse.emf.ecore.xml.^type.Boolean
import org.eclipse.emf.ecore.xml.^type.DateTime
import org.eclipse.emf.ecore.xml.^type.Double
import org.eclipse.emf.ecore.xml.^type.Int
import org.eclipse.emf.ecore.xml.^type.Integer
import org.eclipse.emf.ecore.xml.^type.PositiveInteger
import org.eclipse.emf.ecore.xml.^type.String
import org.eclipse.emf.ecore.xml.^type.UnsignedShort

@GenModel(documentation="Not for LAD/FBD.")
@ExtendedMetaData(name="IntegerAttribute_T", kind="simple")
class IntegerAttributeT {
	@ExtendedMetaData(name=":0", kind="simple")
	org.eclipse.emf.ecore.xml.^type.Integer value
	@GenModel(documentation="Exported only with ReadOnly option, ignored during import.")
	@ExtendedMetaData(kind="attribute", name="Informative", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean informative = "false"
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	org.eclipse.emf.ecore.xml.^type.String[1] name
	@GenModel(documentation="An attribute of attribute, denotes if it is defined by a user or the system itself. In V14, if exists it is always true.")
	@ExtendedMetaData(kind="attribute", name="SystemDefined", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean systemDefined = "true"
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="AccessModifier_TE")
enum AccessModifierTE {
	None
	Array = 1
	Reference = 2
	ReferenceToArray = 3
}

@ExtendedMetaData(name="Blank_T", kind="empty")
class BlankT {
	@ExtendedMetaData(kind="attribute", name="Num", namespace="##targetNamespace")
	unsettable PositiveInteger num = "1"
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="Comment_T", kind="elementOnly")
class CommentT {
	@GenModel(documentation="For NumBLs in STL. NumBLs is the count of the blank spaces before the actual text in the Comment. This is informative.")
	@ExtendedMetaData(kind="element", name="IntegerAttribute", namespace="##targetNamespace")
	contains IntegerAttributeT integerAttribute
	@ExtendedMetaData(kind="element", name="MultiLanguageText", namespace="##targetNamespace")
	contains MultiLanguageTextT[] multiLanguageText
	@GenModel(documentation="Exported only with ReadOnly option, ignored during import.")
	@ExtendedMetaData(kind="attribute", name="Informative", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean informative = "false"
	@GenModel(documentation="Denotes if the comment is at the end of the line (using //) or inside the line (using /* */)")
	@ExtendedMetaData(kind="attribute", name="Inserted", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean inserted = "false"
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="Constant_T", kind="elementOnly")
class ConstantT {
	@ExtendedMetaData(kind="element", name="ConstantType", namespace="##targetNamespace")
	contains ConstantTypeT constantType
	@ExtendedMetaData(kind="element", name="ConstantValue", namespace="##targetNamespace")
	contains ConstantValueT constantValue
	@GenModel(documentation="for Format and FormatFlags. They are informative..")
	@ExtendedMetaData(kind="element", name="StringAttribute", namespace="##targetNamespace")
	contains StringAttributeT[0..2] stringAttribute
	@GenModel(documentation="A member attribute with a type restriction of boolean.")
	@ExtendedMetaData(kind="element", name="BooleanAttribute", namespace="##targetNamespace")
	contains BooleanAttributeT[0..2] booleanAttribute
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	SimaticNameTP name
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="DataType_T", kind="simple")
class DataTypeT {
	@ExtendedMetaData(name=":0", kind="simple")
	org.eclipse.emf.ecore.xml.^type.String value
	@ExtendedMetaData(kind="attribute", name="Informative", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean informative
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="Expression_T", kind="elementOnly")
class ExpressionT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Access", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived AccessT[] access
	@ExtendedMetaData(kind="element", name="Token", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived TokenT[] token
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived CommentT[] comment
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived LineCommentT[] lineComment
	@ExtendedMetaData(kind="element", name="Blank", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived BlankT[] blank
	@ExtendedMetaData(kind="element", name="NewLine", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived NewLineT[] newLine
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="MultiLanguageText_T", kind="simple")
class MultiLanguageTextT {
	@ExtendedMetaData(name=":0", kind="simple")
	org.eclipse.emf.ecore.xml.^type.String value
	@ExtendedMetaData(kind="attribute", name="Lang", namespace="##targetNamespace")
	LangTP[1] lang
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="NamelessParameter_T", kind="elementOnly")
class NamelessParameterT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@GenModel(documentation="for InterfaceFlags. InterfaceFlags is informative\nThe type of the value should be InterfaceFlags_TP\nThe default value is \"S7_Visible\"")
	@ExtendedMetaData(kind="element", name="StringAttribute", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived StringAttributeT[] stringAttribute
	@ExtendedMetaData(kind="element", name="Access", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived AccessT[] access
	@ExtendedMetaData(kind="element", name="Token", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived TokenT[] token
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived CommentT[] comment
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived LineCommentT[] lineComment
	@ExtendedMetaData(kind="element", name="Blank", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived BlankT[] blank
	@ExtendedMetaData(kind="element", name="NewLine", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived NewLineT[] newLine
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="PredefinedVariable_T", kind="empty")
class PredefinedVariableT {
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	unsettable PredefinedVariableTE[1] name
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int[1] uId
}

@ExtendedMetaData(name="Reference_T", kind="elementOnly")
class ReferenceT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived CommentT[] comment
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived LineCommentT[] lineComment
	@ExtendedMetaData(kind="element", name="Blank", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived BlankT[] blank
	@ExtendedMetaData(kind="element", name="NewLine", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived NewLineT[] newLine
	@ExtendedMetaData(kind="element", name="Token", namespace="##targetNamespace")
	contains TokenT token
	@ExtendedMetaData(kind="group", name="group:6")
	EFeatureMapEntry[] group1
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:6")
	contains transient volatile derived CommentT[] comment1
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:6")
	contains transient volatile derived LineCommentT[] lineComment1
	@ExtendedMetaData(kind="element", name="Blank", namespace="##targetNamespace", group="group:6")
	contains transient volatile derived BlankT[] blank1
	@ExtendedMetaData(kind="element", name="NewLine", namespace="##targetNamespace", group="group:6")
	contains transient volatile derived NewLineT[] newLine1
	@ExtendedMetaData(kind="element", name="Access", namespace="##targetNamespace")
	contains AccessT[1] access
	@ExtendedMetaData(kind="group", name="group:12")
	EFeatureMapEntry[] group2
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:12")
	contains transient volatile derived CommentT[] comment2
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:12")
	contains transient volatile derived LineCommentT[] lineComment2
	@ExtendedMetaData(kind="element", name="Blank", namespace="##targetNamespace", group="group:12")
	contains transient volatile derived BlankT[] blank2
	@ExtendedMetaData(kind="element", name="NewLine", namespace="##targetNamespace", group="group:12")
	contains transient volatile derived NewLineT[] newLine2
	@ExtendedMetaData(kind="element", name="Token", namespace="##targetNamespace")
	contains TokenT token1
}

@ExtendedMetaData(name="Scope_._type", baseType="Scope_TE")
type ScopeType wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="SimpleType_TE")
enum SimpleTypeTE {
	undef
	Bool = 1
	Byte = 2
	Char = 3
	Word = 4
	Int = 5
	DWord = 6
	DInt = 7
	Real = 8
	LReal = 9
	Timer = 10
	S5Time = 11
	ARef = 12
	Any = 13
	Time = 14
	S5Count = 15
	Counter = 16
	BlockDB as "Block_DB" = 17
	BlockFB as "Block_FB" = 18
	BlockFC as "Block_FC" = 19
	BlockSFB as "Block_SFB" = 20
	BlockUDT as "Block_UDT" = 21
	MultiFB as "Multi_FB" = 22
	MultiSFB as "Multi_SFB" = 23
}

@ExtendedMetaData(name="Token_T", kind="elementOnly")
class TokenT {
	@GenModel(documentation="For NumBLs. NumBLs is the count of the blank spaces at the start.This is informative.")
	@ExtendedMetaData(kind="element", name="IntegerAttribute", namespace="##targetNamespace")
	contains IntegerAttributeT integerAttribute
	@ExtendedMetaData(kind="attribute", name="Text", namespace="##targetNamespace")
	TokenTE[1] text
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="ViewInfo_T", kind="empty")
class ViewInfoT {
	@ExtendedMetaData(kind="attribute", name="Height", namespace="##targetNamespace")
	unsettable Int height
	@ExtendedMetaData(kind="attribute", name="Start", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean start
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
	@ExtendedMetaData(kind="attribute", name="Width", namespace="##targetNamespace")
	unsettable Int width
	@ExtendedMetaData(kind="attribute", name="XPos", namespace="##targetNamespace")
	unsettable Int xPos
	@ExtendedMetaData(kind="attribute", name="YPos", namespace="##targetNamespace")
	unsettable Int yPos
}

@ExtendedMetaData(name="Width_TE")
enum WidthTE {
	None
	Bit = 1
	Byte = 2
	Word = 3
	Offset = 4
	Double = 5
	Pointer = 6
	Long = 7
	Any = 8
	Block = 9
}

@ExtendedMetaData(name="AccessModifier_TE:Object", baseType="AccessModifier_TE")
type AccessModifierTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="Actions_T", kind="elementOnly")
class ActionsT {
	@ExtendedMetaData(kind="element", name="Title", namespace="##targetNamespace")
	contains CommentT title
	@ExtendedMetaData(kind="group", name="group:1")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Action", namespace="##targetNamespace", group="group:1")
	contains transient volatile derived ActionT[] action
}

@ExtendedMetaData(name="Action_T", kind="elementOnly")
class ActionT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Access", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived AccessT[] access
	@ExtendedMetaData(kind="element", name="Token", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived TokenT[] token
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived CommentT[] comment
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived LineCommentT[] lineComment
	@ExtendedMetaData(kind="element", name="Blank", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived BlankT[] blank
	@ExtendedMetaData(kind="element", name="NewLine", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived NewLineT[] newLine
	@ExtendedMetaData(kind="attribute", name="Event", namespace="##targetNamespace")
	unsettable EventTE event
	@ExtendedMetaData(kind="attribute", name="Interlock", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean interlock
	@ExtendedMetaData(kind="attribute", name="Qualifier", namespace="##targetNamespace")
	unsettable QualifierTE qualifier
}

@ExtendedMetaData(name="AlarmCategory_T", kind="empty")
class AlarmCategoryT {
	@ExtendedMetaData(kind="attribute", name="Id", namespace="##targetNamespace")
	unsettable UnsignedShort[1] ^id
}

@ExtendedMetaData(name="AlarmsSettings_T", kind="elementOnly")
class AlarmsSettingsT {
	@ExtendedMetaData(kind="element", name="AlarmSupervisionCategories", namespace="##targetNamespace")
	contains AlarmSupervisionCategoriesT[1] alarmSupervisionCategories
	@ExtendedMetaData(kind="element", name="AlarmInterlockCategory", namespace="##targetNamespace")
	contains AlarmCategoryT[1] alarmInterlockCategory
	@ExtendedMetaData(kind="element", name="AlarmWarningCategory", namespace="##targetNamespace")
	contains AlarmCategoryT[1] alarmWarningCategory
}

@ExtendedMetaData(name="AlarmSupervisionCategories_T", kind="elementOnly")
class AlarmSupervisionCategoriesT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="AlarmSupervisionCategory", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived AlarmSupervisionCategoryT[] alarmSupervisionCategory
}

@ExtendedMetaData(name="AlarmSupervisionCategory_T", kind="elementOnly")
class AlarmSupervisionCategoryT {
	@GenModel(documentation="Enabler token")
	@ExtendedMetaData(kind="element", name="Token", namespace="##targetNamespace")
	contains TokenT token
	@ExtendedMetaData(kind="attribute", name="DisplayClass", namespace="##targetNamespace")
	unsettable DisplayClassType[1] displayClass
	@ExtendedMetaData(kind="attribute", name="Id", namespace="##targetNamespace")
	unsettable UnsignedShort[1] ^id
}

@ExtendedMetaData(name="AlarmSupportingLanguageModule_T", kind="elementOnly")
class AlarmSupportingLanguageModuleT {
	@ExtendedMetaData(kind="element", name="Title", namespace="##targetNamespace")
	contains CommentT title
	@ExtendedMetaData(kind="element", name="AlarmText", namespace="##targetNamespace")
	contains AlarmTextT alarmText
	@ExtendedMetaData(kind="element", name="FlgNet", namespace="##targetNamespace")
	contains FlgNetT[1] flgNet
	@ExtendedMetaData(kind="attribute", name="ProgrammingLanguage", namespace="##targetNamespace")
	unsettable ProgrammingLanguageTE[1] programmingLanguage
}

@ExtendedMetaData(name="AlarmText_T", kind="elementOnly")
class AlarmTextT {
	@GenModel(documentation="Temporary change for enable of empty alarm text because of the graph alarm handling reconstruction.")
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="MultiLanguageText", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived MultiLanguageTextT[] multiLanguageText
}

@ExtendedMetaData(name="AttributeList_T", kind="elementOnly")
class AttributeListT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@GenModel(documentation="A member attribute with a type restriction of boolean.")
	@ExtendedMetaData(kind="element", name="BooleanAttribute", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived BooleanAttributeT[] booleanAttribute
	@GenModel(documentation="A member attribute with a type restriction of integer.")
	@ExtendedMetaData(kind="element", name="IntegerAttribute", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived IntegerAttributeT[] integerAttribute
	@GenModel(documentation="A member attribute with a type restriction of real.")
	@ExtendedMetaData(kind="element", name="RealAttribute", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived RealAttributeT[] realAttribute
	@GenModel(documentation="A member attribute with a type restriction of string.")
	@ExtendedMetaData(kind="element", name="StringAttribute", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived StringAttributeT[] stringAttribute
	@ExtendedMetaData(kind="element", name="DateAttribute", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived DateAttributeT[] dateAttribute
}

@ExtendedMetaData(name="AutomaticTyped_T", kind="empty")
class AutomaticTypedT {
	@GenModel(documentation="The name of the automatic chosen template parameter. Not for InstructionRef")
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	org.eclipse.emf.ecore.xml.^type.String name
}

@ExtendedMetaData(name="Branches_T", kind="elementOnly")
class BranchesT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Branch", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived BranchT[] branch
}

@ExtendedMetaData(name="BranchRef_T", kind="empty")
class BranchRefT {
	@ExtendedMetaData(kind="attribute", name="In", namespace="##targetNamespace")
	unsettable Int in
	@ExtendedMetaData(kind="attribute", name="Number", namespace="##targetNamespace")
	unsettable Int[1] number
	@ExtendedMetaData(kind="attribute", name="Out", namespace="##targetNamespace")
	unsettable Int out
}

@ExtendedMetaData(name="Branch_T", kind="empty")
class BranchT {
	@ExtendedMetaData(kind="attribute", name="Cardinality", namespace="##targetNamespace")
	unsettable Int[1] cardinality
	@ExtendedMetaData(kind="attribute", name="Number", namespace="##targetNamespace")
	unsettable Int[1] number
	@ExtendedMetaData(kind="attribute", name="Type", namespace="##targetNamespace")
	unsettable BranchTE[1] ^type
}

@ExtendedMetaData(name="Branch_TE")
enum BranchTE {
	SimBegin
	SimEnd = 1
	AltBegin = 2
	AltEnd = 3
}

@ExtendedMetaData(name="Branch_TE:Object", baseType="Branch_TE")
type BranchTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="Component_T", kind="elementOnly")
class ComponentT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived CommentT[] comment
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived LineCommentT[] lineComment
	@ExtendedMetaData(kind="element", name="Blank", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived BlankT[] blank
	@ExtendedMetaData(kind="element", name="NewLine", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived NewLineT[] newLine
	@GenModel(documentation="SCL")
	@ExtendedMetaData(kind="element", name="Token", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived TokenT[] token
	@GenModel(documentation="For the indices of an array")
	@ExtendedMetaData(kind="element", name="Access", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived AccessT[] access
	@GenModel(documentation="A member attribute with a type restriction of boolean.")
	@ExtendedMetaData(kind="element", name="BooleanAttribute", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived BooleanAttributeT[] booleanAttribute
	@GenModel(documentation="If component has child AccessModifier is Array else AccessModifier is None")
	@ExtendedMetaData(kind="attribute", name="AccessModifier", namespace="##targetNamespace")
	unsettable AccessModifierTE accessModifier = "None"
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	org.eclipse.emf.ecore.xml.^type.String[1] name
	@ExtendedMetaData(kind="attribute", name="SimpleAccessModifier", namespace="##targetNamespace")
	unsettable SimpleAccessModifierTP simpleAccessModifier = "None"
	@ExtendedMetaData(kind="attribute", name="SliceAccessModifier", namespace="##targetNamespace")
	unsettable SliceAccessModifierTP sliceAccessModifier = "undef"
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="Connections_T", kind="elementOnly")
class ConnectionsT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Connection", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived ConnectionT[+] connection
}

@ExtendedMetaData(name="Connection_T", kind="elementOnly")
class ConnectionT {
	@ExtendedMetaData(kind="element", name="NodeFrom", namespace="##targetNamespace")
	contains NodeT[1] nodeFrom
	@ExtendedMetaData(kind="element", name="NodeTo", namespace="##targetNamespace")
	contains NodeT[1] nodeTo
	@ExtendedMetaData(kind="element", name="LinkType", namespace="##targetNamespace")
	unsettable LinkTE[1] linkType
}

@ExtendedMetaData(name="DisplayClass_._type", baseType="http://www.eclipse.org/emf/2003/XMLType#unsignedShort",
	minInclusive="0", maxInclusive="16")
type DisplayClassType wraps int

@ExtendedMetaData(name="DisplayClass_._type:Object", baseType="DisplayClass_._type")
type DisplayClassTypeObject wraps Integer

@ExtendedMetaData(name="Event_TE")
enum EventTE {
	_ as ""
	A1 = 1
	L0 = 2
	L1 = 3
	R1 = 4
	S0 = 5
	S1 = 6
	V0 = 7
	V1 = 8
}

@ExtendedMetaData(name="Event_TE:Object", baseType="Event_TE")
type EventTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="Graph_T", kind="elementOnly")
class GraphT {
	@ExtendedMetaData(kind="element", name="PreOperations", namespace="##targetNamespace")
	contains PermanentOperationsT[1] preOperations
	@ExtendedMetaData(kind="element", name="Sequence", namespace="##targetNamespace")
	contains SequenceT[+] sequence
	@ExtendedMetaData(kind="element", name="PostOperations", namespace="##targetNamespace")
	contains PermanentOperationsT[1] postOperations
	@ExtendedMetaData(kind="element", name="AlarmsSettings", namespace="##targetNamespace")
	contains AlarmsSettingsT[1] alarmsSettings
}

@ExtendedMetaData(name="GUID_TP", baseType="http://www.eclipse.org/emf/2003/XMLType#string",
	pattern="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}")
type GUIDTP wraps String

@ExtendedMetaData(name="IdentCon_T", kind="empty")
class IdentConT {
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int[1] uId
}

@ExtendedMetaData(name="IdentRef_T", kind="elementOnly")
class IdentRefT {
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace")
	contains CommentT comment
	@ExtendedMetaData(kind="element", name="ViewInfo", namespace="##targetNamespace")
	contains ViewInfoT viewInfo
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int[1] uId
}

@ExtendedMetaData(name="Indirect_T", kind="elementOnly")
class IndirectT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Token", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived TokenT[] token
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived CommentT[] comment
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived LineCommentT[] lineComment
	@ExtendedMetaData(kind="element", name="Blank", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived BlankT[] blank
	@ExtendedMetaData(kind="element", name="NewLine", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived NewLineT[] newLine
	@ExtendedMetaData(kind="element", name="Access", namespace="##targetNamespace")
	contains AccessT access
	@ExtendedMetaData(kind="attribute", name="Area", namespace="##targetNamespace")
	unsettable AreaTE area
	@ExtendedMetaData(kind="attribute", name="BitOffset", namespace="##targetNamespace")
	AnySimpleType bitOffset
	@ExtendedMetaData(kind="attribute", name="Register", namespace="##targetNamespace")
	unsettable RegisterTE register
	@ExtendedMetaData(kind="attribute", name="Width", namespace="##targetNamespace")
	unsettable WidthTE[1] width
}

@ExtendedMetaData(name="Instance_T", kind="elementOnly")
class InstanceT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Component", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived ComponentT[] component
	@ExtendedMetaData(kind="element", name="AbsoluteOffset", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived AbsoluteOffsetT[] absoluteOffset
	@GenModel(documentation="the DOT; only if separated. Not in Graph ActionList, not in LAD/FBD.")
	@ExtendedMetaData(kind="element", name="Token", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived TokenT[] token
	@ExtendedMetaData(kind="element", name="Address", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived AddressT[] address
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived CommentT[] comment
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived LineCommentT[] lineComment
	@ExtendedMetaData(kind="element", name="Blank", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived BlankT[] blank
	@ExtendedMetaData(kind="element", name="NewLine", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived NewLineT[] newLine
	@ExtendedMetaData(kind="attribute", name="Scope", namespace="##targetNamespace")
	unsettable ScopeTE[1] scope
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="Interlocks_T", kind="elementOnly")
class InterlocksT {
	@ExtendedMetaData(kind="element", name="Interlock", namespace="##targetNamespace")
	contains AlarmSupportingLanguageModuleT[1] interlock
}

@ExtendedMetaData(name="LineComment_T", kind="elementOnly")
class LineCommentT {
	@GenModel(documentation="For NumBLs in STL. NumBLs is the count of the blank spaces before the actual text in the LineComment. This is informative.")
	@ExtendedMetaData(kind="element", name="IntegerAttribute", namespace="##targetNamespace")
	contains IntegerAttributeT integerAttribute
	@GenModel(documentation="the value of the comment")
	@ExtendedMetaData(kind="element", name="Text", namespace="##targetNamespace")
	contains TextT[1] text
	@GenModel(documentation="Denotes if the comment is at the end of the line (using //) or inside the line (using /* */)")
	@ExtendedMetaData(kind="attribute", name="Inserted", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean inserted = "false"
	@ExtendedMetaData(kind="attribute", name="NoClosingBracket", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean noClosingBracket = "false"
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="Link_TE")
enum LinkTE {
	Direct
	Jump = 1
}

@ExtendedMetaData(name="Link_TE:Object", baseType="Link_TE")
type LinkTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="Name_._1_._type", baseType="SimaticName_TP", minLength="1")
type NameType1 wraps String

@ExtendedMetaData(name="NewLine_T", kind="empty")
class NewLineT {
	@ExtendedMetaData(kind="attribute", name="Num", namespace="##targetNamespace")
	unsettable PositiveInteger num = "1"
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="Node_T", kind="elementOnly")
class NodeT {
	@ExtendedMetaData(kind="element", name="StepRef", namespace="##targetNamespace")
	contains StepRefT stepRef
	@ExtendedMetaData(kind="element", name="TransitionRef", namespace="##targetNamespace")
	contains TransitionRefT transitionRef
	@ExtendedMetaData(kind="element", name="BranchRef", namespace="##targetNamespace")
	contains BranchRefT branchRef
	@ExtendedMetaData(kind="element", name="EndConnection", namespace="##targetNamespace")
	contains EObject endConnection
}

@ExtendedMetaData(name="OpenCon_T", kind="empty")
class OpenConT {
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int[1] uId
}

@ExtendedMetaData(name="Parts_T", kind="elementOnly")
class PartsT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Access", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived AccessT[] access
	@ExtendedMetaData(kind="element", name="Part", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived PartT[] part
	@ExtendedMetaData(kind="element", name="Call", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived CallT[] call
}

@ExtendedMetaData(name="PermanentOperations_T", kind="elementOnly")
class PermanentOperationsT {
	@ExtendedMetaData(kind="element", name="Title", namespace="##targetNamespace")
	contains CommentT title
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace")
	contains CommentT comment
	@ExtendedMetaData(kind="element", name="PermanentOperation", namespace="##targetNamespace")
	contains PermanentOperationT[] permanentOperation
}

@ExtendedMetaData(name="PermanentOperation_T", kind="elementOnly")
class PermanentOperationT {
	@ExtendedMetaData(kind="element", name="Title", namespace="##targetNamespace")
	contains CommentT title
	@ExtendedMetaData(kind="element", name="FlgNet", namespace="##targetNamespace")
	contains FlgNetT flgNet
	@ExtendedMetaData(kind="attribute", name="ProgrammingLanguage", namespace="##targetNamespace")
	unsettable ProgrammingLanguageTE[1] programmingLanguage
}

@ExtendedMetaData(name="PinName_TE", baseType="http://www.eclipse.org/emf/2003/XMLType#string")
type PinNameTE wraps String

@ExtendedMetaData(name="PredefinedVariable_TE")
enum PredefinedVariableTE {
	ENO
}

@ExtendedMetaData(name="ProgrammingContext_TE")
enum ProgrammingContextTE {
	Plain
	GraphTransition = 1
	GraphSupervision = 2
	GraphInterlock = 3
	GraphActions = 4
	PreOperation = 5
	PostOperation = 6
}

@ExtendedMetaData(name="ProgrammingContext_TE:Object", baseType="ProgrammingContext_TE")
type ProgrammingContextTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="ProgrammingLanguage_TE")
enum ProgrammingLanguageTE {
	STL
	FBD = 1
	LAD = 2
	FBDIEC as "FBD_IEC" = 3
	LADIEC as "LAD_IEC" = 4
	GRAPH = 5
	DB = 6
	SDB = 7
	DBCPU as "DB_CPU" = 8
	FBIDB as "FB_IDB" = 9
	SFBIDB as "SFB_IDB" = 10
	DTDB as "DT_DB" = 11
	SCL = 12
}

@ExtendedMetaData(name="ProgrammingLanguage_TE:Object", baseType="ProgrammingLanguage_TE")
type ProgrammingLanguageTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="Qualifier_TE")
enum QualifierTE {
	_ as ""
	CD = 1
	CR = 2
	CS = 3
	CU = 4
	D = 5
	L = 6
	N = 7
	ON = 8
	OFF = 9
	R = 10
	S = 11
	TD = 12
	TF = 13
	TL = 14
	TR = 15
}

@ExtendedMetaData(name="Qualifier_TE:Object", baseType="Qualifier_TE")
type QualifierTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="Scope_TE")
enum ScopeTE {
	@GenModel(documentation="Symbols we do not know what they are")
	Undef
	GlobalConstant = 1
	LocalConstant = 2
	GlobalVariable = 3
	LocalVariable = 4
	Instruction = 5
	Label = 6
	TypedConstant = 7
	AddressConstant = 8
	LiteralConstant = 9
	AlarmConstant = 10
	Address = 11
	Statusword = 12
	Expression = 13
	Unnamed = 14
	Call = 15
	CallWithType = 16
	UserType = 17
	SystemType = 18
	Reference = 19
	PredefinedVariable = 20
}

@ExtendedMetaData(name="Sequence_T", kind="elementOnly")
class SequenceT {
	@ExtendedMetaData(kind="element", name="Title", namespace="##targetNamespace")
	contains CommentT title
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace")
	contains CommentT comment
	@ExtendedMetaData(kind="element", name="Steps", namespace="##targetNamespace")
	contains StepsT[1] steps
	@ExtendedMetaData(kind="element", name="Transitions", namespace="##targetNamespace")
	contains TransitionsT[1] transitions
	@ExtendedMetaData(kind="element", name="Branches", namespace="##targetNamespace")
	contains BranchesT[1] branches
	@ExtendedMetaData(kind="element", name="Connections", namespace="##targetNamespace")
	contains ConnectionsT[1] connections
}

@ExtendedMetaData(name="SimaticName_TP", baseType="http://www.eclipse.org/emf/2003/XMLType#string")
type SimaticNameTP wraps String

@ExtendedMetaData(name="SimpleType_TE:Object", baseType="SimpleType_TE")
type SimpleTypeTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="Statusword_T", kind="empty")
class StatuswordT {
	@ExtendedMetaData(kind="attribute", name="Combination", namespace="##targetNamespace")
	unsettable StatuswordTE[1] combination
}

@ExtendedMetaData(name="StepName_T", kind="elementOnly")
class StepNameT {
	@ExtendedMetaData(kind="element", name="MultiLanguageText", namespace="##targetNamespace")
	contains MultiLanguageTextT[] multiLanguageText
}

@ExtendedMetaData(name="StepRef_T", kind="empty")
class StepRefT {
	@ExtendedMetaData(kind="attribute", name="Number", namespace="##targetNamespace")
	unsettable Int[1] number
}

@ExtendedMetaData(name="Steps_T", kind="elementOnly")
class StepsT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Step", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived StepType[+] step
}

@ExtendedMetaData(name="Step_T", kind="elementOnly")
class StepT {
	@ExtendedMetaData(kind="element", name="StepName", namespace="##targetNamespace")
	contains StepNameT stepName
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace")
	contains CommentT comment
	@ExtendedMetaData(kind="element", name="Actions", namespace="##targetNamespace")
	contains ActionsT[1] actions
	@ExtendedMetaData(kind="element", name="Supervisions", namespace="##targetNamespace")
	contains SupervisionsT[1] supervisions
	@ExtendedMetaData(kind="element", name="Interlocks", namespace="##targetNamespace")
	contains InterlocksT[1] interlocks
	@ExtendedMetaData(kind="attribute", name="Init", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean init = "false"
	@ExtendedMetaData(kind="attribute", name="IsMissing", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean isMissing = "false"
	@ExtendedMetaData(kind="attribute", name="MaximumStepTime", namespace="##targetNamespace")
	org.eclipse.emf.ecore.xml.^type.String maximumStepTime
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	AnySimpleType[1] name
	@ExtendedMetaData(kind="attribute", name="Number", namespace="##targetNamespace")
	unsettable Int[1] number
	@ExtendedMetaData(kind="attribute", name="WarningTime", namespace="##targetNamespace")
	org.eclipse.emf.ecore.xml.^type.String warningTime
}

@ExtendedMetaData(name="Step_._type", kind="elementOnly")
class StepType extends StepT {
}

@ExtendedMetaData(name="Supervisions_T", kind="elementOnly")
class SupervisionsT {
	@ExtendedMetaData(kind="element", name="Supervision", namespace="##targetNamespace")
	contains AlarmSupportingLanguageModuleT[1] supervision
}

@ExtendedMetaData(name="TransitionName_T", kind="elementOnly")
class TransitionNameT {
	@ExtendedMetaData(kind="element", name="MultiLanguageText", namespace="##targetNamespace")
	contains MultiLanguageTextT[] multiLanguageText
}

@ExtendedMetaData(name="TransitionRef_T", kind="empty")
class TransitionRefT {
	@ExtendedMetaData(kind="attribute", name="Number", namespace="##targetNamespace")
	unsettable Int[1] number
}

@ExtendedMetaData(name="Transitions_T", kind="elementOnly")
class TransitionsT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Transition", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived TransitionT[] transition
}

@ExtendedMetaData(name="Transition_T", kind="elementOnly")
class TransitionT {
	@ExtendedMetaData(kind="element", name="TransitionName", namespace="##targetNamespace")
	contains TransitionNameT transitionName
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace")
	contains CommentT comment
	@ExtendedMetaData(kind="element", name="FlgNet", namespace="##targetNamespace")
	contains FlgNetT[1] flgNet
	@ExtendedMetaData(kind="attribute", name="IsMissing", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean isMissing = "false"
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	AnySimpleType[1] name
	@ExtendedMetaData(kind="attribute", name="Number", namespace="##targetNamespace")
	unsettable Int[1] number
	@ExtendedMetaData(kind="attribute", name="ProgrammingLanguage", namespace="##targetNamespace")
	unsettable ProgrammingLanguageTE[1] programmingLanguage
}

@ExtendedMetaData(name="BlockInstSupervisionGroupsType", kind="elementOnly")
class BlockInstSupervisionGroupsType {
	@ExtendedMetaData(kind="element", name="BlockInstSupervisionGroup", namespace="##targetNamespace")
	contains BlockInstSupervisionGroupType[+] blockInstSupervisionGroup
}

@ExtendedMetaData(name="BlockInstSupervisionGroup_._type", kind="elementOnly")
class BlockInstSupervisionGroupType {
	@ExtendedMetaData(kind="element", name="Multiinstance", namespace="##targetNamespace")
	contains MultiinstanceType multiinstance
	@ExtendedMetaData(kind="element", name="BlockInstSupervision", namespace="##targetNamespace")
	contains BlockInstSupervisionType[+] blockInstSupervision
}

@ExtendedMetaData(name="BlockInstSupervision_._type", kind="elementOnly")
class BlockInstSupervisionType {
	@ExtendedMetaData(kind="element", name="Number", namespace="##targetNamespace")
	unsettable Int[1] number
	@ExtendedMetaData(kind="element", name="StateStruct", namespace="##targetNamespace")
	contains StateStructType[1] stateStruct
	@ExtendedMetaData(kind="element", name="BlockTypeSupervisionNumber", namespace="##targetNamespace")
	unsettable Int[1] blockTypeSupervisionNumber
}

@ExtendedMetaData(name="Multiinstance_._type", kind="empty")
class MultiinstanceType {
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	org.eclipse.emf.ecore.xml.^type.String[1] name
}

@ExtendedMetaData(name="StateStruct_._type", kind="empty")
class StateStructType {
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	org.eclipse.emf.ecore.xml.^type.String[1] name
}

@ExtendedMetaData(name="SupervisionFB_._type", kind="empty")
class SupervisionFBType {
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	org.eclipse.emf.ecore.xml.^type.String[1] name
}

@ExtendedMetaData(name="Accessibility_TE")
enum AccessibilityTE {
	Public
	Internal = 1
	Protected = 2
	Private = 3
}

@ExtendedMetaData(name="Accessibility_TE:Object", baseType="Accessibility_TE")
type AccessibilityTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="IndexPath_TP", baseType="http://www.eclipse.org/emf/2003/XMLType#string",
	pattern="-?\\d+(,-?\\d+)*(;(-?\\d+(,-?\\d+)*))?")
type IndexPathTP wraps String

@ExtendedMetaData(name="MemberAttributes_TE")
enum MemberAttributesTE {
	@GenModel(documentation="Write acces only inside function")
	CodeReadOnly
	@GenModel(documentation="string: Member shares offset with another member in this structure")
	At = 1
	@GenModel(documentation="boolean: Member can be synchronized with work memory")
	SetPoint = 2
	@GenModel(documentation="boolean: Editor does not show the member")
	UserVisible = 3
	@GenModel(documentation="boolean: User cannot change member name")
	UserReadOnly = 4
	@GenModel(documentation="boolean: Editor does not allow to delete the member")
	UserDeletable = 5
	@GenModel(documentation="boolean: No HMI access, no structure item")
	HmiAccessible = 6
	@GenModel(documentation="boolean: Filter to reduce the number of members shown in the first place")
	HmiVisible = 7
	@GenModel(documentation="integer: ")
	Offset = 8
	@GenModel(documentation="integer: ")
	PaddedSize = 9
	@GenModel(documentation="boolean: Hide assignement at call if matches with PredefinedAssignment")
	HiddenAssignment = 10
	@GenModel(documentation="string: Input for the paramter used when call is placed")
	PredefinedAssignment = 11
	@GenModel(documentation="boolean: The user cannot change the predefined assignement at the call")
	ReadOnlyAssignment = 12
}

@ExtendedMetaData(name="MemberAttributes_TE:Object", baseType="MemberAttributes_TE")
type MemberAttributesTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="Member_T", kind="elementOnly")
class MemberT {
	@ExtendedMetaData(kind="element", name="AttributeList", namespace="##targetNamespace")
	contains AttributeListT attributeList
	@ExtendedMetaData(kind="group", name="group:1")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Member", namespace="##targetNamespace", group="group:1")
	contains transient volatile derived MemberT[] member
	@ExtendedMetaData(kind="element", name="Sections", namespace="##targetNamespace", group="group:1")
	contains transient volatile derived SectionsT[] sections
	@ExtendedMetaData(kind="element", name="StartValue", namespace="##targetNamespace", group="group:1")
	contains transient volatile derived StartValueT[] startValue
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:1")
	contains transient volatile derived CommentT[] comment
	@ExtendedMetaData(kind="element", name="Subelement", namespace="##targetNamespace", group="group:1")
	contains transient volatile derived SubelementT[] subelement
	@ExtendedMetaData(kind="attribute", name="Accessibility", namespace="##targetNamespace")
	unsettable AccessibilityTE accessibility = "Public"
	@ExtendedMetaData(kind="attribute", name="Datatype", namespace="##targetNamespace")
	SimaticTypeTE[1] datatype
	@ExtendedMetaData(kind="attribute", name="Informative", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean informative = "false"
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	org.eclipse.emf.ecore.xml.^type.String[1] name
	@ExtendedMetaData(kind="attribute", name="Remanence", namespace="##targetNamespace")
	unsettable RemanenceTE remanence = "NonRetain"
	@GenModel(documentation="The version of the library type to use. Previous to this, the version was written inside the Datatype attribute itself, like \"dtl:v1.0\". Now, this is written in two separate attributes, to mitigate problems with weird names (\"dtl:v1.0\" could be a UDT name!).")
	@ExtendedMetaData(kind="attribute", name="Version", namespace="##targetNamespace")
	org.eclipse.emf.ecore.xml.^type.String version
}

@ExtendedMetaData(name="Remanence_TE")
enum RemanenceTE {
	SetInIDB
	NonRetain = 1
	Retain = 2
}

@ExtendedMetaData(name="Remanence_TE:Object", baseType="Remanence_TE")
type RemanenceTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="Sections_T", kind="elementOnly")
class SectionsT {
	@ExtendedMetaData(kind="element", name="AttributeList", namespace="##targetNamespace")
	contains AttributeListT attributeList
	@ExtendedMetaData(kind="element", name="Section", namespace="##targetNamespace")
	contains SectionT[] section
	@ExtendedMetaData(kind="attribute", name="Datatype", namespace="##targetNamespace")
	SimaticTypeTE datatype
	@ExtendedMetaData(kind="attribute", name="Version", namespace="##targetNamespace")
	org.eclipse.emf.ecore.xml.^type.String version
}

@ExtendedMetaData(name="Section_T", kind="elementOnly")
class SectionT {
	@GenModel(documentation="Base Class")
	@ExtendedMetaData(kind="element", name="Sections", namespace="##targetNamespace")
	contains SectionsT sections
	@ExtendedMetaData(kind="element", name="Member", namespace="##targetNamespace")
	contains MemberT[] member
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	unsettable SectionNameTE[1] name
}

@ExtendedMetaData(name="StartValue_T", kind="simple")
class StartValueT {
	@ExtendedMetaData(name=":0", kind="simple")
	org.eclipse.emf.ecore.xml.^type.String value
	@ExtendedMetaData(kind="attribute", name="ConstantName", namespace="##targetNamespace")
	SimaticNameTP constantName
	@ExtendedMetaData(kind="attribute", name="Informative", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean informative = "false"
	@ExtendedMetaData(kind="attribute", name="IsBulkValue", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean isBulkValue = "false"
}

@ExtendedMetaData(name="Subelement_T", kind="elementOnly")
class SubelementT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="StartValue", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived StartValueT[] startValue
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived CommentT[] comment
	@ExtendedMetaData(kind="attribute", name="Path", namespace="##targetNamespace")
	IndexPathTP path
}

@ExtendedMetaData(name="AbsoluteOffset_T", kind="empty")
class AbsoluteOffsetT {
	@GenModel(documentation="Byte * 8 + Bit")
	@ExtendedMetaData(kind="attribute", name="BitOffset", namespace="##targetNamespace")
	unsettable Int[1] bitOffset
	@ExtendedMetaData(kind="attribute", name="Type", namespace="##targetNamespace")
	org.eclipse.emf.ecore.xml.^type.String[1] ^type
}

@ExtendedMetaData(name="Access_T", kind="elementOnly")
class AccessT {
	@GenModel(documentation="for NumBLs. NumBLs is informative. Not for LAD/FBD.")
	@ExtendedMetaData(kind="element", name="IntegerAttribute", namespace="##targetNamespace")
	contains IntegerAttributeT integerAttribute
	@ExtendedMetaData(kind="element", name="Label", namespace="##targetNamespace")
	contains LabelT label
	@ExtendedMetaData(kind="element", name="Constant", namespace="##targetNamespace")
	contains ConstantT constant
	@GenModel(documentation="call of a user block. Not in Graph ActionList.")
	@ExtendedMetaData(kind="element", name="CallInfo", namespace="##targetNamespace")
	contains CallInfoType callInfo
	@GenModel(documentation="call of an instruction. Not for LAD/FBD, Graph ActionList.")
	@ExtendedMetaData(kind="element", name="Instruction", namespace="##targetNamespace")
	contains InstructionT instruction
	@GenModel(documentation="STL specific")
	@ExtendedMetaData(kind="element", name="Indirect", namespace="##targetNamespace")
	contains IndirectT indirect
	@GenModel(documentation="Only for S7-300/400/WinAC")
	@ExtendedMetaData(kind="element", name="Statusword", namespace="##targetNamespace")
	contains StatuswordT statusword
	@GenModel(documentation="SCL specific")
	@ExtendedMetaData(kind="element", name="Expression", namespace="##targetNamespace")
	contains ExpressionT expression
	@ExtendedMetaData(kind="element", name="Symbol", namespace="##targetNamespace")
	contains SymbolT symbol
	@GenModel(documentation="for absolute addresses")
	@ExtendedMetaData(kind="element", name="Address", namespace="##targetNamespace")
	contains AddressT address
	@ExtendedMetaData(kind="group", name="group:10")
	EFeatureMapEntry[] group
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:10")
	contains transient volatile derived CommentType[] comment
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:10")
	contains transient volatile derived LineCommentT[] lineComment
	@ExtendedMetaData(kind="attribute", name="Scope", namespace="##targetNamespace")
	ScopeType[1] scope
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="Area_TE:Object", baseType="Area_TE")
type AreaTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="AttributList_T", kind="elementOnly")
class AttributListT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@GenModel(documentation="A member attribute with a type restriction of boolean.")
	@ExtendedMetaData(kind="element", name="BooleanAttribute", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived BooleanAttributeT[] booleanAttribute
	@GenModel(documentation="A member attribute with a type restriction of integer.")
	@ExtendedMetaData(kind="element", name="IntegerAttribute", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived IntegerAttributeT[] integerAttribute
	@GenModel(documentation="A member attribute with a type restriction of real.")
	@ExtendedMetaData(kind="element", name="RealAttribute", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived RealAttributeT[] realAttribute
	@GenModel(documentation="A member attribute with a type restriction of string.")
	@ExtendedMetaData(kind="element", name="StringAttribute", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived StringAttributeT[] stringAttribute
}

@ExtendedMetaData(name="BooleanAttribute_T", kind="simple")
class BooleanAttributeT {
	@ExtendedMetaData(name=":0", kind="simple")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean value
	@GenModel(documentation="Exported only with ReadOnly option, ignored during import.")
	@ExtendedMetaData(kind="attribute", name="Informative", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean informative = "false"
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	org.eclipse.emf.ecore.xml.^type.String[1] name
	@GenModel(documentation="An attribute of attribute, denotes if it is defined by a user or the system itself. In V14, if exists it is always true.")
	@ExtendedMetaData(kind="attribute", name="SystemDefined", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean systemDefined = "true"
}

@GenModel(documentation="Not for LAD/FBD. ")
@ExtendedMetaData(name="CallInfo_T", kind="elementOnly")
class CallInfoT {
	@GenModel(documentation="for BlockNumber. BlockNumber is informative.")
	@ExtendedMetaData(kind="element", name="IntegerAttribute", namespace="##targetNamespace")
	contains IntegerAttributeT integerAttribute
	@GenModel(documentation="for ParameterModifiedTS. ParameterModifiedTS is informative")
	@ExtendedMetaData(kind="element", name="DateAttribute", namespace="##targetNamespace")
	contains DateAttributeT dateAttribute
	@ExtendedMetaData(kind="group", name="group:2")
	EFeatureMapEntry[] group
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:2")
	contains transient volatile derived CommentType[] comment
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:2")
	contains transient volatile derived LineCommentT[] lineComment
	@GenModel(documentation="the COMMA, only if separated. Not for LAD/FBD")
	@ExtendedMetaData(kind="element", name="Token", namespace="##targetNamespace")
	contains TokenT token
	@ExtendedMetaData(kind="group", name="group:6")
	EFeatureMapEntry[] group1
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:6")
	contains transient volatile derived CommentType[] comment1
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:6")
	contains transient volatile derived LineCommentT[] lineComment1
	@ExtendedMetaData(kind="element", name="Instance", namespace="##targetNamespace")
	contains InstanceT instance
	@ExtendedMetaData(kind="element", name="Parameter", namespace="##targetNamespace")
	contains ParameterT[] parameter
	@ExtendedMetaData(kind="attribute", name="BlockType", namespace="##targetNamespace")
	unsettable BlockTypeTE[1] blockType
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	SimaticNameTP name
}

@ExtendedMetaData(name="CallInfo_._type", kind="elementOnly")
class CallInfoType extends CallInfoT {
}

@ExtendedMetaData(name="Call_T", kind="elementOnly")
class CallT {
	@ExtendedMetaData(kind="element", name="CallInfo", namespace="##targetNamespace")
	contains CallInfoType[1] callInfo
	@ExtendedMetaData(kind="element", name="TemplateValue", namespace="##targetNamespace")
	contains TemplateValueT[] templateValue
	@ExtendedMetaData(kind="element", name="AutomaticTyped", namespace="##targetNamespace")
	contains AutomaticTypedT[] automaticTyped
	@GenModel(documentation="The invisible pins of this part.")
	@ExtendedMetaData(kind="element", name="Invisible", namespace="##targetNamespace")
	contains InvisibleT[] invisible
	@GenModel(documentation="The negated pins of this part.")
	@ExtendedMetaData(kind="element", name="Negated", namespace="##targetNamespace")
	contains NegT[] negated
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace")
	contains CommentType comment
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int[1] uId
}

@ExtendedMetaData(name="Comment_._type", kind="elementOnly")
class CommentType extends CommentT {
}

@ExtendedMetaData(name="ConstantType_._type", kind="simple")
class ConstantTypeType {
	@ExtendedMetaData(name=":0", kind="simple")
	org.eclipse.emf.ecore.xml.^type.String value
	@ExtendedMetaData(kind="attribute", name="Informative", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean informative
}

@ExtendedMetaData(name="ConstantValue_._type", kind="simple")
class ConstantValueType extends ConstantValueT {
}

@ExtendedMetaData(name="", kind="mixed")
class DocumentRoot {
	@ExtendedMetaData(kind="elementWildcard", name=":mixed")
	EFeatureMapEntry[] mixed
	@ExtendedMetaData(kind="attribute", name="xmlns:prefix")
	contains transient EStringToStringMapEntry[] xMLNSPrefixMap
	@ExtendedMetaData(kind="attribute", name="xsi:schemaLocation")
	contains transient EStringToStringMapEntry[] xSISchemaLocation
	@ExtendedMetaData(kind="element", name="AbsoluteOffset", namespace="##targetNamespace")
	contains transient volatile derived AbsoluteOffsetT[0..?] absoluteOffset
	@ExtendedMetaData(kind="element", name="Access", namespace="##targetNamespace")
	contains transient volatile derived AccessT[0..?] access
	@ExtendedMetaData(kind="element", name="Address", namespace="##targetNamespace")
	contains transient volatile derived AddressT[0..?] address
	@ExtendedMetaData(kind="element", name="AttributeList", namespace="##targetNamespace")
	contains transient volatile derived AttributListT[0..?] attributeList
	@ExtendedMetaData(kind="element", name="AutomaticTyped", namespace="##targetNamespace")
	contains transient volatile derived AutomaticTypedT[0..?] automaticTyped
	@GenModel(documentation="A member attribute with a type restriction of boolean.")
	@ExtendedMetaData(kind="element", name="BooleanAttribute", namespace="##targetNamespace")
	contains transient volatile derived BooleanAttributeT[0..?] booleanAttribute
	@ExtendedMetaData(kind="element", name="Call", namespace="##targetNamespace")
	contains transient volatile derived CallT[0..?] call
	@ExtendedMetaData(kind="element", name="CallInfo", namespace="##targetNamespace")
	contains transient volatile derived CallInfoType[0..?] callInfo
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace")
	contains transient volatile derived CommentType[0..?] comment
	@ExtendedMetaData(kind="element", name="Component", namespace="##targetNamespace")
	contains transient volatile derived ComponentT[0..?] component
	@ExtendedMetaData(kind="element", name="Constant", namespace="##targetNamespace")
	contains transient volatile derived ConstantT[0..?] constant
	@ExtendedMetaData(kind="element", name="ConstantType", namespace="##targetNamespace")
	contains transient volatile derived ConstantTypeType[0..?] constantType
	@ExtendedMetaData(kind="element", name="ConstantValue", namespace="##targetNamespace")
	contains transient volatile derived ConstantValueType[0..?] constantValue
	@ExtendedMetaData(kind="element", name="DateAttribute", namespace="##targetNamespace")
	contains transient volatile derived DateAttributeT[0..?] dateAttribute
	@ExtendedMetaData(kind="element", name="Equation", namespace="##targetNamespace")
	contains transient volatile derived EquationT[0..?] equation
	@ExtendedMetaData(kind="element", name="Expression", namespace="##targetNamespace")
	contains transient volatile derived ExpressionT[0..?] expression
	@ExtendedMetaData(kind="element", name="FlgNet", namespace="##targetNamespace")
	contains transient volatile derived FlgNetT[0..?] flgNet
	@ExtendedMetaData(kind="element", name="IdentCon", namespace="##targetNamespace")
	contains transient volatile derived IdentConT[0..?] identCon
	@ExtendedMetaData(kind="element", name="Indirect", namespace="##targetNamespace")
	contains transient volatile derived IndirectT[0..?] indirect
	@ExtendedMetaData(kind="element", name="Instance", namespace="##targetNamespace")
	contains transient volatile derived InstanceT[0..?] instance
	@ExtendedMetaData(kind="element", name="Instruction", namespace="##targetNamespace")
	contains transient volatile derived InstructionT[0..?] instruction
	@GenModel(documentation="A member attribute with a type restriction of integer.")
	@ExtendedMetaData(kind="element", name="IntegerAttribute", namespace="##targetNamespace")
	contains transient volatile derived IntegerAttributeT[0..?] integerAttribute
	@GenModel(documentation="The invisible pins of this part.")
	@ExtendedMetaData(kind="element", name="Invisible", namespace="##targetNamespace")
	contains transient volatile derived InvisibleT[0..?] invisible
	@ExtendedMetaData(kind="element", name="Label", namespace="##targetNamespace")
	contains transient volatile derived LabelT[0..?] label
	@ExtendedMetaData(kind="element", name="LabelDeclaration", namespace="##targetNamespace")
	contains transient volatile derived LabelDeclarationT[0..?] labelDeclaration
	@ExtendedMetaData(kind="element", name="Labels", namespace="##targetNamespace")
	contains transient volatile derived LabelsT[0..?] labels
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace")
	contains transient volatile derived LineCommentT[0..?] lineComment
	@ExtendedMetaData(kind="element", name="MultiLanguageText", namespace="##targetNamespace")
	contains transient volatile derived MultiLanguageTextT[0..?] multiLanguageText
	@ExtendedMetaData(kind="element", name="NameCon", namespace="##targetNamespace")
	contains transient volatile derived NameConT[0..?] nameCon
	@GenModel(documentation="The negated pins of this part.")
	@ExtendedMetaData(kind="element", name="Negated", namespace="##targetNamespace")
	contains transient volatile derived NegT[0..?] negated
	@ExtendedMetaData(kind="element", name="Openbranch", namespace="##targetNamespace")
	contains transient volatile derived OpenbranchT[0..?] openbranch
	@ExtendedMetaData(kind="element", name="OpenCon", namespace="##targetNamespace")
	contains transient volatile derived OpenConT[0..?] openCon
	@ExtendedMetaData(kind="element", name="Parameter", namespace="##targetNamespace")
	contains transient volatile derived ParameterT[0..?] parameter
	@ExtendedMetaData(kind="element", name="Part", namespace="##targetNamespace")
	contains transient volatile derived PartT[0..?] part
	@ExtendedMetaData(kind="element", name="Parts", namespace="##targetNamespace")
	contains transient volatile derived PartsT[0..?] parts
	@ExtendedMetaData(kind="element", name="Powerrail", namespace="##targetNamespace")
	contains transient volatile derived PowerrailT[0..?] powerrail
	@GenModel(documentation="A member attribute with a type restriction of real.")
	@ExtendedMetaData(kind="element", name="RealAttribute", namespace="##targetNamespace")
	contains transient volatile derived RealAttributeT[0..?] realAttribute
	@GenModel(documentation="Only for S7-300/400/WinAC")
	@ExtendedMetaData(kind="element", name="Statusword", namespace="##targetNamespace")
	contains transient volatile derived StatuswordT[0..?] statusword
	@GenModel(documentation="A member attribute with a type restriction of string.")
	@ExtendedMetaData(kind="element", name="StringAttribute", namespace="##targetNamespace")
	contains transient volatile derived StringAttributeT[0..?] stringAttribute
	@ExtendedMetaData(kind="element", name="Symbol", namespace="##targetNamespace")
	contains transient volatile derived SymbolT[0..?] symbol
	@ExtendedMetaData(kind="element", name="TemplateValue", namespace="##targetNamespace")
	contains transient volatile derived TemplateValueT[0..?] templateValue
	@ExtendedMetaData(kind="element", name="Text", namespace="##targetNamespace")
	contains transient volatile derived TextT[0..?] text
	@ExtendedMetaData(kind="element", name="Token", namespace="##targetNamespace")
	contains transient volatile derived TokenT[0..?] token
	@ExtendedMetaData(kind="element", name="ViewInfo", namespace="##targetNamespace")
	contains transient volatile derived ViewInfoT[0..?] viewInfo
	@ExtendedMetaData(kind="element", name="Wire", namespace="##targetNamespace")
	contains transient volatile derived WireT[0..?] wire
	@ExtendedMetaData(kind="element", name="Wires", namespace="##targetNamespace")
	contains transient volatile derived WiresT[0..?] wires
}

@ExtendedMetaData(name="Equation_T", kind="simple")
class EquationT {
	@ExtendedMetaData(name=":0", kind="simple")
	org.eclipse.emf.ecore.xml.^type.String value
}

@ExtendedMetaData(name="FlgNet_T", kind="elementOnly")
class FlgNetT {
	@ExtendedMetaData(kind="element", name="Labels", namespace="##targetNamespace")
	contains LabelsT labels
	@ExtendedMetaData(kind="element", name="Parts", namespace="##targetNamespace")
	contains PartsT[1] parts
	@ExtendedMetaData(kind="element", name="Wires", namespace="##targetNamespace")
	contains WiresT wires
}

@ExtendedMetaData(name="GateName_TE", baseType="http://www.eclipse.org/emf/2003/XMLType#string")
type GateNameTE wraps String

@ExtendedMetaData(name="Invisible_T", kind="empty")
class InvisibleT {
	@GenModel(documentation="The name of the invisible pin.")
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	org.eclipse.emf.ecore.xml.^type.String name
}

@ExtendedMetaData(name="LabelDeclaration_T", kind="elementOnly")
class LabelDeclarationT {
	@GenModel(documentation="for NumBLs. NumBLs is informative")
	@ExtendedMetaData(kind="element", name="IntegerAttribute", namespace="##targetNamespace")
	contains IntegerAttributeT integerAttribute
	@ExtendedMetaData(kind="element", name="Label", namespace="##targetNamespace")
	contains LabelT[1] label
	@ExtendedMetaData(kind="group", name="group:2")
	EFeatureMapEntry[] group
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:2")
	contains transient volatile derived CommentType[] comment
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:2")
	contains transient volatile derived LineCommentT[] lineComment
	@GenModel(documentation="the COLON; only if separated")
	@ExtendedMetaData(kind="element", name="Token", namespace="##targetNamespace")
	contains TokenT token
	@ExtendedMetaData(kind="group", name="group:6")
	EFeatureMapEntry[] group1
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:6")
	contains transient volatile derived CommentType[] comment1
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:6")
	contains transient volatile derived LineCommentT[] lineComment1
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="Labels_T", kind="elementOnly")
class LabelsT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="LabelDeclaration", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived LabelDeclarationT[] labelDeclaration
}

@ExtendedMetaData(name="Lang_TP", baseType="http://www.eclipse.org/emf/2003/XMLType#string",
	pattern="[a-zA-Z]{2}-[a-zA-Z]{2}")
type LangTP wraps String

@ExtendedMetaData(name="NameCon_T", kind="empty")
class NameConT {
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	PinNameTE[1] name
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int[1] uId
}

@ExtendedMetaData(name="Neg_T", kind="empty")
class NegT {
	@GenModel(documentation="The name of the negated pin.")
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	org.eclipse.emf.ecore.xml.^type.String name
}

@ExtendedMetaData(name="Openbranch_T", kind="empty")
class OpenbranchT {
}

@ExtendedMetaData(name="Part_T", kind="elementOnly")
class PartT {
	@GenModel(documentation="The equation of this part. This is only used for the Calculate box.")
	@ExtendedMetaData(kind="element", name="Equation", namespace="##targetNamespace")
	contains EquationT equation
	@ExtendedMetaData(kind="element", name="Instance", namespace="##targetNamespace")
	contains InstanceT instance
	@ExtendedMetaData(kind="element", name="TemplateValue", namespace="##targetNamespace")
	contains TemplateValueT[] templateValue
	@ExtendedMetaData(kind="element", name="AutomaticTyped", namespace="##targetNamespace")
	contains AutomaticTypedT[] automaticTyped
	@GenModel(documentation="The invisible pins of this part.")
	@ExtendedMetaData(kind="element", name="Invisible", namespace="##targetNamespace")
	contains InvisibleT[] invisible
	@GenModel(documentation="The negated pins of this part.")
	@ExtendedMetaData(kind="element", name="Negated", namespace="##targetNamespace")
	contains NegT[] negated
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace")
	contains CommentType comment
	@ExtendedMetaData(kind="attribute", name="DisabledENO", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean disabledENO = "false"
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	NameType[1] name
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int[1] uId
	@ExtendedMetaData(kind="attribute", name="Version", namespace="##targetNamespace")
	VersionStringTP version
}

@ExtendedMetaData(name="Powerrail_T", kind="empty")
class PowerrailT {
}

@ExtendedMetaData(name="Scope_TE:Object", baseType="Scope_TE")
type ScopeTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="SectionName_TE")
enum SectionNameTE {
	None
	Input = 1
	Return = 2
	Output = 3
	InOut = 4
	Static = 5
	Temp = 6
	Constant = 7
	Base = 8
}

@ExtendedMetaData(name="TemplateValue_T", kind="simple")
class TemplateValueT {
	@ExtendedMetaData(name=":0", kind="simple")
	org.eclipse.emf.ecore.xml.^type.String value
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	SimaticNameTP[1] name
	@ExtendedMetaData(kind="attribute", name="Type", namespace="##targetNamespace")
	unsettable TemplateTypeTE[1] ^type
}

@ExtendedMetaData(name="Wires_T", kind="elementOnly")
class WiresT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Wire", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived WireT[+] wire
}

@ExtendedMetaData(name="Wire_T", kind="elementOnly")
class WireT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Powerrail", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived PowerrailT[] powerrail
	@ExtendedMetaData(kind="element", name="NameCon", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived NameConT[] nameCon
	@ExtendedMetaData(kind="element", name="IdentCon", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived IdentConT[] identCon
	@ExtendedMetaData(kind="element", name="Openbranch", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived OpenbranchT[] openbranch
	@ExtendedMetaData(kind="element", name="OpenCon", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived OpenConT[] openCon
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int[1] uId
}

@ExtendedMetaData(name="BlockType_TE")
enum BlockTypeTE {
	DB
	FB = 1
	FC = 2
	OB = 3
	UDT = 4
	FBT = 5
	FCT = 6
}

@ExtendedMetaData(name="FormatFlags_TE", baseType="http://www.eclipse.org/emf/2003/XMLType#string",
	pattern="None ((Lower|Format|Size|Under|Exp|TypeQualifier)(,\\s*)?)*")
type FormatFlagsTE wraps String

@ExtendedMetaData(name="SliceAccessModifier_TP", baseType="http://www.eclipse.org/emf/2003/XMLType#string",
	pattern="([xbwdXBWD]\\d+)|undef")
type SliceAccessModifierTP wraps String

@ExtendedMetaData(name="StructuredText_T", kind="elementOnly")
class StructuredTextT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Access", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived AccessT[] access
	@ExtendedMetaData(kind="element", name="Token", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived TokenT[] token
	@ExtendedMetaData(kind="element", name="Parameter", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived ParameterT[] parameter
	@ExtendedMetaData(kind="element", name="Text", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived TextT[] text
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived CommentT[] comment
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived LineCommentT[] lineComment
	@ExtendedMetaData(kind="element", name="Blank", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived BlankT[] blank
	@ExtendedMetaData(kind="element", name="NewLine", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived NewLineT[] newLine
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="TemplateType_TE")
enum TemplateTypeTE {
	Cardinality
	Type = 1
	Operation = 2
}

@ExtendedMetaData(name="TemplateType_TE:Object", baseType="TemplateType_TE")
type TemplateTypeTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="BlockType_TE:Object", baseType="BlockType_TE")
type BlockTypeTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="ConstantType_T", kind="simple")
class ConstantTypeT {
	@ExtendedMetaData(name=":0", kind="simple")
	org.eclipse.emf.ecore.xml.^type.String value
	@ExtendedMetaData(kind="attribute", name="Informative", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean informative
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="Format_TE")
enum FormatTE {
	Real
	Bin = 1
	DecSigned = 2
	DecUnsigned = 3
	Pointer = 4
	CharSequence = 5
	DecSequence = 6
	Hex = 7
	S5Count = 8
	Time = 9
	Date = 10
	TimeOfDay = 11
	S5Time = 12
	Bool = 13
	Oct = 14
	Bcd = 15
	DateAndTime = 16
	String = 17
	Any = 18
	Number = 19
	Char = 20
	HexSequence = 21
}

@ExtendedMetaData(name="Instruction_T", kind="elementOnly")
class InstructionT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Token", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived TokenT[] token
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived CommentT[] comment
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived LineCommentT[] lineComment
	@ExtendedMetaData(kind="element", name="Blank", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived BlankT[] blank
	@ExtendedMetaData(kind="element", name="NewLine", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived NewLineT[] newLine
	@ExtendedMetaData(kind="element", name="TemplateValue", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived TemplateValueT[] templateValue
	@ExtendedMetaData(kind="element", name="Instance", namespace="##targetNamespace")
	contains InstanceT instance
	@ExtendedMetaData(kind="group", name="TokenG:8")
	EFeatureMapEntry[] tokenG
	@ExtendedMetaData(kind="element", name="Token", namespace="##targetNamespace", group="TokenG:8")
	contains transient volatile derived TokenT[] token1
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="TokenG:8")
	contains transient volatile derived CommentT[] comment1
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="TokenG:8")
	contains transient volatile derived LineCommentT[] lineComment1
	@ExtendedMetaData(kind="element", name="Blank", namespace="##targetNamespace", group="TokenG:8")
	contains transient volatile derived BlankT[] blank1
	@ExtendedMetaData(kind="element", name="NewLine", namespace="##targetNamespace", group="TokenG:8")
	contains transient volatile derived NewLineT[] newLine1
	@ExtendedMetaData(kind="group", name="group:14")
	EFeatureMapEntry[] group1
	@ExtendedMetaData(kind="element", name="NamelessParameter", namespace="##targetNamespace", group="group:14")
	contains transient volatile derived NamelessParameterT[] namelessParameter
	@ExtendedMetaData(kind="element", name="Token", namespace="##targetNamespace", group="group:14")
	contains transient volatile derived TokenT[] token2
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:14")
	contains transient volatile derived CommentT[] comment2
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:14")
	contains transient volatile derived LineCommentT[] lineComment2
	@ExtendedMetaData(kind="element", name="Blank", namespace="##targetNamespace", group="group:14")
	contains transient volatile derived BlankT[] blank2
	@ExtendedMetaData(kind="element", name="NewLine", namespace="##targetNamespace", group="group:14")
	contains transient volatile derived NewLineT[] newLine2
	@ExtendedMetaData(kind="group", name="group:21")
	EFeatureMapEntry[] group2
	@ExtendedMetaData(kind="element", name="Parameter", namespace="##targetNamespace", group="group:21")
	contains transient volatile derived ParameterT[] parameter
	@ExtendedMetaData(kind="element", name="Token", namespace="##targetNamespace", group="group:21")
	contains transient volatile derived TokenT[] token3
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:21")
	contains transient volatile derived CommentT[] comment3
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:21")
	contains transient volatile derived LineCommentT[] lineComment3
	@ExtendedMetaData(kind="element", name="Blank", namespace="##targetNamespace", group="group:21")
	contains transient volatile derived BlankT[] blank3
	@ExtendedMetaData(kind="element", name="NewLine", namespace="##targetNamespace", group="group:21")
	contains transient volatile derived NewLineT[] newLine3
	@ExtendedMetaData(kind="attribute", name="Informative", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean informative = "false"
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	NameType name
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
	@ExtendedMetaData(kind="attribute", name="Version", namespace="##targetNamespace")
	VersionStringTP version
}

@ExtendedMetaData(name="Label_T", kind="elementOnly")
class LabelT {
	@GenModel(documentation="A member attribute with a type restriction of boolean.")
	@ExtendedMetaData(kind="element", name="BooleanAttribute", namespace="##targetNamespace")
	contains BooleanAttributeT booleanAttribute
	@ExtendedMetaData(kind="group", name="group:1")
	EFeatureMapEntry[] group
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:1")
	contains transient volatile derived CommentT[] comment
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:1")
	contains transient volatile derived LineCommentT[] lineComment
	@ExtendedMetaData(kind="element", name="Blank", namespace="##targetNamespace", group="group:1")
	contains transient volatile derived BlankT[] blank
	@ExtendedMetaData(kind="element", name="NewLine", namespace="##targetNamespace", group="group:1")
	contains transient volatile derived NewLineT[] newLine
	@ExtendedMetaData(kind="element", name="Token", namespace="##targetNamespace")
	contains TokenT token
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	SimaticNameTP[1] name
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="Name_._type", baseType="SimaticName_TP", minLength="1")
type NameType wraps String

@ExtendedMetaData(name="Parameter_T", kind="elementOnly")
class ParameterT {
	@GenModel(documentation="for NumBLs. NumBLs is informative")
	@ExtendedMetaData(kind="element", name="IntegerAttribute", namespace="##targetNamespace")
	contains IntegerAttributeT integerAttribute
	@GenModel(documentation="for InterfaceFlags. InterfaceFlags is informative\nThe type of the value should be InterfaceFlags_TP\nThe default value is \"S7_Visible\"")
	@ExtendedMetaData(kind="element", name="StringAttribute", namespace="##targetNamespace")
	contains StringAttributeT stringAttribute
	@GenModel(documentation="A member attribute with a type restriction of boolean.")
	@ExtendedMetaData(kind="element", name="BooleanAttribute", namespace="##targetNamespace")
	contains BooleanAttributeT[] booleanAttribute
	@ExtendedMetaData(kind="group", name="group:3")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Access", namespace="##targetNamespace", group="group:3")
	contains transient volatile derived AccessT[] access
	@ExtendedMetaData(kind="element", name="Token", namespace="##targetNamespace", group="group:3")
	contains transient volatile derived TokenT[] token
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:3")
	contains transient volatile derived CommentT[] comment
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:3")
	contains transient volatile derived LineCommentT[] lineComment
	@ExtendedMetaData(kind="element", name="Blank", namespace="##targetNamespace", group="group:3")
	contains transient volatile derived BlankT[] blank
	@ExtendedMetaData(kind="element", name="NewLine", namespace="##targetNamespace", group="group:3")
	contains transient volatile derived NewLineT[] newLine
	@ExtendedMetaData(kind="attribute", name="Informative", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean informative = "false"
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	SimaticNameTP[1] name
	@ExtendedMetaData(kind="attribute", name="Section", namespace="##targetNamespace")
	unsettable SectionNameTE section
	@ExtendedMetaData(kind="attribute", name="TemplateReference", namespace="##targetNamespace")
	org.eclipse.emf.ecore.xml.^type.String templateReference
	@ExtendedMetaData(kind="attribute", name="Type", namespace="##targetNamespace")
	SimaticTypeTE ^type
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="RealAttribute_T", kind="simple")
class RealAttributeT {
	@ExtendedMetaData(name=":0", kind="simple")
	unsettable org.eclipse.emf.ecore.xml.^type.Double value
	@GenModel(documentation="Exported only with ReadOnly option, ignored during import.")
	@ExtendedMetaData(kind="attribute", name="Informative", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean informative = "false"
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	org.eclipse.emf.ecore.xml.^type.String[1] name
	@GenModel(documentation="An attribute of attribute, denotes if it is defined by a user or the system itself. In V14, if exists it is always true.")
	@ExtendedMetaData(kind="attribute", name="SystemDefined", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean systemDefined = "true"
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="Register_TE:Object", baseType="Register_TE")
type RegisterTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="StatementList_T", kind="elementOnly")
class StatementListT {
	@ExtendedMetaData(kind="element", name="StlStatement", namespace="##targetNamespace")
	contains StlStatementT[] stlStatement
}

@ExtendedMetaData(name="Statusword_TE")
enum StatuswordTE {
	BR
	OV = 1
	OS = 2
	EQ = 3
	NE = 4
	GT = 5
	LT = 6
	GE = 7
	LE = 8
	UO = 9
	NU = 10
	STW = 11
}

@ExtendedMetaData(name="Statusword_TE:Object", baseType="Statusword_TE")
type StatuswordTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="StlStatement_T", kind="elementOnly")
class StlStatementT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived CommentT[] comment
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived LineCommentT[] lineComment
	@ExtendedMetaData(kind="element", name="Blank", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived BlankT[] blank
	@ExtendedMetaData(kind="element", name="NewLine", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived NewLineT[] newLine
	@ExtendedMetaData(kind="element", name="LabelDeclaration", namespace="##targetNamespace")
	contains LabelDeclarationT labelDeclaration
	@GenModel(documentation="missing for empty lines")
	@ExtendedMetaData(kind="element", name="StlToken", namespace="##targetNamespace")
	contains StlTokenT[1] stlToken
	@ExtendedMetaData(kind="group", name="group:7")
	EFeatureMapEntry[] group1
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:7")
	contains transient volatile derived CommentT[] comment1
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:7")
	contains transient volatile derived LineCommentT[] lineComment1
	@ExtendedMetaData(kind="element", name="Blank", namespace="##targetNamespace", group="group:7")
	contains transient volatile derived BlankT[] blank1
	@ExtendedMetaData(kind="element", name="NewLine", namespace="##targetNamespace", group="group:7")
	contains transient volatile derived NewLineT[] newLine1
	@ExtendedMetaData(kind="element", name="Access", namespace="##targetNamespace")
	contains AccessT access
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="STL_TE")
enum STLTE {
	A
	AN = 1
	O = 2
	ON = 3
	X = 4
	XN = 5
	S = 6
	R = 7
	Assign = 8
	Rise = 9
	Fall = 10
	L = 11
	T = 12
	LAR1 = 13
	LAR2 = 14
	TAR1 = 15
	TAR2 = 16
	@GenModel(documentation="SE, SV")
	Extend = 17
	Free = 18
	LC = 19
	@GenModel(documentation="SF, SA")
	OffDelay = 20
	@GenModel(documentation="SS")
	Retentive = 21
	@GenModel(documentation="SD, SE")
	OnDelay = 22
	@GenModel(documentation="SP, SI")
	Pulse = 23
	CD = 24
	CU = 25
	CALL = 26
	CC = 27
	UC = 28
	@GenModel(documentation="AUF")
	OPENDB as "OPEN_DB" = 29
	@GenModel(documentation="AUF DI")
	OPENDI as "OPEN_DI" = 30
	LTI as "LT_I" = 31
	LTR as "LT_R" = 32
	LTD as "LT_D" = 33
	LEI as "LE_I" = 34
	LER as "LE_R" = 35
	LED as "LE_D" = 36
	EQI as "EQ_I" = 37
	EQR as "EQ_R" = 38
	EQD as "EQ_D" = 39
	GEI as "GE_I" = 40
	GER as "GE_R" = 41
	GED as "GE_D" = 42
	GTI as "GT_I" = 43
	GTR as "GT_R" = 44
	GTD as "GT_D" = 45
	NEI as "NE_I" = 46
	NER as "NE_R" = 47
	NED as "NE_D" = 48
	@GenModel(documentation="SPA")
	JU = 49
	@GenModel(documentation="SPB")
	JC = 50
	@GenModel(documentation="SPO")
	JO = 51
	@GenModel(documentation="SPZ")
	JZ = 52
	@GenModel(documentation="SPP")
	JP = 53
	@GenModel(documentation="SPM")
	JM = 54
	@GenModel(documentation="SPN")
	JN = 55
	@GenModel(documentation="SPBN")
	JCN = 56
	@GenModel(documentation="SPBB")
	JCB = 57
	@GenModel(documentation="SPBNB")
	JNB = 58
	@GenModel(documentation="SPBI")
	JBI = 59
	@GenModel(documentation="SPBNI")
	JNBI = 60
	@GenModel(documentation="SPS")
	JOS = 61
	@GenModel(documentation="SPU")
	JUN = 62
	@GenModel(documentation="SPMZ")
	JMZ = 63
	@GenModel(documentation="SPZ")
	JPZ = 64
	LOOP = 65
	JL = 66
	ADD = 67
	SLD = 68
	SLW = 69
	SRD = 70
	SRW = 71
	@GenModel(documentation="SSD, SVD")
	SRSD = 72
	@GenModel(documentation="SSW, SVW")
	SRSW = 73
	RLD = 74
	RRD = 75
	BLD = 76
	ADDAR1 = 77
	ADDAR2 = 78
	INC = 79
	DEC = 80
	AW = 81
	OW = 82
	XW = 83
	AD = 84
	OD = 85
	XD = 86
	ABRACK as "A_BRACK" = 87
	ANBRACK as "AN_BRACK" = 88
	OBRACK as "O_BRACK" = 89
	ONBRACK as "ON_BRACK" = 90
	XBRACK as "X_BRACK" = 91
	XNBRACK as "XN_BRACK" = 92
	@GenModel(documentation="KEW, INV_F")
	INVI as "INV_I" = 93
	@GenModel(documentation="KZW, NEG_F")
	NEGI as "NEG_I" = 94
	@GenModel(documentation="KED")
	INVD as "INV_D" = 95
	@GenModel(documentation="KZD")
	NEGD as "NEG_D" = 96
	@GenModel(documentation="NEG_G, ND")
	NEGR as "NEG_R" = 97
	@GenModel(documentation="ABS_G")
	ABSR as "ABS_R" = 98
	SQRT = 99
	SQR = 100
	LN = 101
	EXP = 102
	SIN = 103
	ASIN = 104
	COS = 105
	ACOS = 106
	TAN = 107
	ATAN = 108
	RLDA = 109
	RRDA = 110
	@GenModel(documentation="DEF")
	BTI = 111
	@GenModel(documentation="DUF")
	ITB = 112
	@GenModel(documentation="DED")
	BTD = 113
	@GenModel(documentation="DUD")
	DTB = 114
	@GenModel(documentation="FDG")
	DTR = 115
	@GenModel(documentation="GFDN")
	RND = 116
	@GenModel(documentation="GFDM")
	RNDM as "RND_M" = 117
	@GenModel(documentation="GFDP")
	RNDP as "RND_P" = 118
	TRUNC = 119
	@GenModel(documentation="FD")
	ITD = 120
	@GenModel(documentation="TAW")
	CAW = 121
	@GenModel(documentation="TAD")
	CAD = 122
	TAR1ACCU1 as "TAR1_ACCU1" = 123
	TAR2ACCU1 as "TAR2_ACCU1" = 124
	@GenModel(documentation="+F")
	ADDI as "ADD_I" = 125
	@GenModel(documentation="-F")
	SUBI as "SUB_I" = 126
	@GenModel(documentation="xF")
	MULI as "MUL_I" = 127
	@GenModel(documentation=":F")
	DIVI as "DIV_I" = 128
	@GenModel(documentation="+D")
	ADDD as "ADD_D" = 129
	@GenModel(documentation="-D")
	SUBD as "SUB_D" = 130
	@GenModel(documentation="xD")
	MULD as "MUL_D" = 131
	@GenModel(documentation=":D")
	DIVD as "DIV_D" = 132
	MODD as "MOD_D" = 133
	LDBLG as "L_DBLG" = 134
	LDILG as "L_DILG" = 135
	LDBNO as "L_DBNO" = 136
	LDINO as "L_DINO" = 137
	@GenModel(documentation="+G")
	ADDR as "ADD_R" = 138
	@GenModel(documentation="-G")
	SUBR as "SUB_R" = 139
	@GenModel(documentation="xG")
	MULR as "MUL_R" = 140
	@GenModel(documentation=":G")
	DIVR as "DIV_R" = 141
	@GenModel(documentation="TAK")
	CAC = 142
	LEAVE = 143
	PUSH = 144
	POP = 145
	SET = 146
	NEG = 147
	CLR = 148
	@GenModel(documentation="BEB")
	BEC = 149
	@GenModel(documentation=")")
	BRACKET = 150
	SAVE = 151
	NOP0 as "NOP_0" = 152
	NOP1 as "NOP_1" = 153
	@GenModel(documentation="MCR(")
	MCRBRACK as "MCR_BRACK" = 154
	@GenModel(documentation="MCR)")
	BRACKMCR as "BRACK_MCR" = 155
	MCRA = 156
	MCRD = 157
	ENT = 158
	LAR1ACCU1 as "LAR1_ACCU1" = 159
	LAR1AR2 as "LAR1_AR2" = 160
	LAR2ACCU1 as "LAR2_ACCU1" = 161
	TAR1AR2 as "TAR1_AR2" = 162
	@GenModel(documentation="TAR")
	CAR = 163
	@GenModel(documentation="TDB")
	CDB = 164
	COMMENT = 165
	EMPTYLINE as "EMPTY_LINE" = 166
	PSEUDO = 167
	MOVE = 168
	MOVEBLOCK as "MOVE_BLOCK" = 169
	@GenModel(documentation="BEA")
	BE = 170
	BEU = 171
}

@ExtendedMetaData(name="STL_TE:Object", baseType="STL_TE")
type STLTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="StlToken_T", kind="elementOnly")
class StlTokenT {
	@GenModel(documentation="for NumBLs. NumBLs is informative")
	@ExtendedMetaData(kind="element", name="IntegerAttribute", namespace="##targetNamespace")
	contains IntegerAttributeT integerAttribute
	@ExtendedMetaData(kind="group", name="group:1")
	EFeatureMapEntry[] group
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:1")
	contains transient volatile derived CommentT[] comment
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:1")
	contains transient volatile derived LineCommentT[] lineComment
	@ExtendedMetaData(kind="element", name="Blank", namespace="##targetNamespace", group="group:1")
	contains transient volatile derived BlankT[] blank
	@ExtendedMetaData(kind="element", name="NewLine", namespace="##targetNamespace", group="group:1")
	contains transient volatile derived NewLineT[] newLine
	@GenModel(documentation="e.g 0 1 for NOP 0, NOP 1; STW for L STW or DILG for L DILG; only if separated by comment")
	@ExtendedMetaData(kind="element", name="Token", namespace="##targetNamespace")
	contains TokenT token
	@ExtendedMetaData(kind="attribute", name="Text", namespace="##targetNamespace")
	unsettable STLTE[1] text
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="DateAttribute_T", kind="simple")
class DateAttributeT {
	@ExtendedMetaData(name=":0", kind="simple")
	DateTime value
	@GenModel(documentation="Exported only with ReadOnly option, ignored during import.")
	@ExtendedMetaData(kind="attribute", name="Informative", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean informative = "false"
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	org.eclipse.emf.ecore.xml.^type.String[1] name
	@GenModel(documentation="An attribute of attribute, denotes if it is defined by a user or the system itself. In V14, if exists it is always true.")
	@ExtendedMetaData(kind="attribute", name="SystemDefined", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean systemDefined = "true"
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="SectionName_TE:Object", baseType="SectionName_TE")
type SectionNameTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="StringAttribute_T", kind="simple")
class StringAttributeT {
	@ExtendedMetaData(name=":0", kind="simple")
	org.eclipse.emf.ecore.xml.^type.String value
	@GenModel(documentation="Exported only with ReadOnly option, ignored during import.")
	@ExtendedMetaData(kind="attribute", name="Informative", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean informative = "false"
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	org.eclipse.emf.ecore.xml.^type.String[1] name
	@GenModel(documentation="An attribute of attribute, denotes if it is defined by a user or the system itself. In V14, if exists it is always true.")
	@ExtendedMetaData(kind="attribute", name="SystemDefined", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean systemDefined = "true"
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="Address_T", kind="elementOnly")
class AddressT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@GenModel(documentation="A member attribute with a type restriction of boolean.")
	@ExtendedMetaData(kind="element", name="BooleanAttribute", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived BooleanAttributeT[] booleanAttribute
	@ExtendedMetaData(kind="attribute", name="Area", namespace="##targetNamespace")
	unsettable AreaTE[1] area
	@GenModel(documentation="In general it is Byte * 8 + Bit. But if it is used for addressing a DB we will find the number of the DB here (e.g. \"DB12\" ->12).")
	@ExtendedMetaData(kind="attribute", name="BitOffset", namespace="##targetNamespace")
	unsettable Int bitOffset
	@GenModel(documentation="for DB access")
	@ExtendedMetaData(kind="attribute", name="BlockNumber", namespace="##targetNamespace")
	unsettable Int blockNumber
	@GenModel(documentation="if true, the import unnoted it")
	@ExtendedMetaData(kind="attribute", name="Informative", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean informative = "false"
	@ExtendedMetaData(kind="attribute", name="Type", namespace="##targetNamespace")
	SimaticNameTP ^type
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="Area_TE")
enum AreaTE {
	None
	PeripheryInput = 1
	PeripheryOutput = 2
	Input = 3
	Output = 4
	Memory = 5
	FB = 6
	FC = 7
	@GenModel(documentation="partly qualified access with DB register")
	DB = 8
	@GenModel(documentation="partly qualified access with DI register")
	DI = 9
	Timer = 10
	Counter = 11
	@GenModel(documentation="Classic Local Stack")
	Local = 12
}

@ExtendedMetaData(name="ConstantValue_T", kind="simple")
class ConstantValueT {
	@ExtendedMetaData(name=":0", kind="simple")
	org.eclipse.emf.ecore.xml.^type.String value
	@ExtendedMetaData(kind="attribute", name="Informative", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean informative
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="Format_TE:Object", baseType="Format_TE")
type FormatTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="InterfaceFlags_TP", baseType="http://www.eclipse.org/emf/2003/XMLType#string",
	pattern="None ((Mandatory|S7_Visible)(,\\s*)?)*")
type InterfaceFlagsTP wraps String

@ExtendedMetaData(name="PredefinedVariable_TE:Object", baseType="PredefinedVariable_TE")
type PredefinedVariableTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="Register_TE")
enum RegisterTE {
	AR1
	AR2 = 1
}

@ExtendedMetaData(name="SimaticType_TE", baseType="http://www.eclipse.org/emf/2003/XMLType#string")
type SimaticTypeTE wraps String

@ExtendedMetaData(name="SimpleAccessModifier_TP", baseType="http://www.eclipse.org/emf/2003/XMLType#string",
	pattern="None|((Periphery|QualityInformation)(,\\s*)?)*")
type SimpleAccessModifierTP wraps String

@ExtendedMetaData(name="Symbol_T", kind="elementOnly")
class SymbolT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Component", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived ComponentT[] component
	@ExtendedMetaData(kind="element", name="Address", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived AddressT[] address
	@ExtendedMetaData(kind="element", name="AbsoluteOffset", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived AbsoluteOffsetT[] absoluteOffset
	@GenModel(documentation="SCL.")
	@ExtendedMetaData(kind="element", name="Token", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived TokenT[] token
	@ExtendedMetaData(kind="element", name="Access", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived AccessT[] access
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived CommentT[] comment
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived LineCommentT[] lineComment
	@ExtendedMetaData(kind="element", name="Blank", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived BlankT[] blank
	@ExtendedMetaData(kind="element", name="NewLine", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived NewLineT[] newLine
	@ExtendedMetaData(kind="attribute", name="Scope", namespace="##targetNamespace")
	unsettable ScopeTE scope
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="Text_T", kind="simple")
class TextT {
	@ExtendedMetaData(name=":0", kind="simple")
	org.eclipse.emf.ecore.xml.^type.String value
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int uId
}

@ExtendedMetaData(name="Width_TE:Object", baseType="Width_TE")
type WidthTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="AssociatedValueOperand_._type", kind="empty")
class AssociatedValueOperandType {
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	org.eclipse.emf.ecore.xml.^type.String[1] name
	@ExtendedMetaData(kind="attribute", name="Number", namespace="##targetNamespace")
	unsettable NumberType1[1] number
}

@ExtendedMetaData(name="AssociatedValues_._type", kind="elementOnly")
class AssociatedValuesType {
	@ExtendedMetaData(kind="element", name="AssociatedValue", namespace="##targetNamespace")
	contains AssociatedValueType[1..3] associatedValue
}

@ExtendedMetaData(name="AssociatedValue_._type", kind="elementOnly")
class AssociatedValueType {
	@ExtendedMetaData(kind="element", name="AssociatedValueOperand", namespace="##targetNamespace")
	contains AssociatedValueOperandType associatedValueOperand
}

@ExtendedMetaData(name="BlockTypeSupervisionsType", kind="elementOnly")
class BlockTypeSupervisionsType {
	@ExtendedMetaData(kind="element", name="BlockTypeSupervision", namespace="##targetNamespace")
	contains BlockTypeSupervisionType[+] blockTypeSupervision
}

@ExtendedMetaData(name="BlockTypeSupervisions_._type", kind="elementOnly")
class BlockTypeSupervisionsType1 extends BlockTypeSupervisionsType {
}

@ExtendedMetaData(name="BlockTypeSupervision_._type", kind="elementOnly")
class BlockTypeSupervisionType {
	@ExtendedMetaData(kind="element", name="SupervisedOperand", namespace="##targetNamespace")
	contains SupervisedOperandType[1] supervisedOperand
	@ExtendedMetaData(kind="element", name="SupervisedStatus", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean[1] supervisedStatus
	@ExtendedMetaData(kind="element", name="DelayOperand", namespace="##targetNamespace")
	contains DelayOperandType delayOperand
	@ExtendedMetaData(kind="element", name="Conditions", namespace="##targetNamespace")
	contains ConditionsType conditions
	@ExtendedMetaData(kind="element", name="CategoryNumber", namespace="##targetNamespace")
	unsettable CategoryNumberType[1] categoryNumber
	@ExtendedMetaData(kind="element", name="SubCategory1Number", namespace="##targetNamespace")
	unsettable Int subCategory1Number
	@ExtendedMetaData(kind="element", name="SubCategory2Number", namespace="##targetNamespace")
	unsettable Int subCategory2Number
	@ExtendedMetaData(kind="element", name="SpecificField", namespace="##targetNamespace")
	contains SpecificFieldType specificField
	@ExtendedMetaData(kind="attribute", name="Number", namespace="##targetNamespace")
	unsettable Int[1] number
	@ExtendedMetaData(kind="attribute", name="Type", namespace="##targetNamespace")
	unsettable TypeType1[1] ^type
}

@ExtendedMetaData(name="CategoryNumber_._type", baseType="http://www.eclipse.org/emf/2003/XMLType#int",
	minInclusive="1", maxInclusive="8")
type CategoryNumberType wraps int

@ExtendedMetaData(name="CategoryNumber_._type:Object", baseType="CategoryNumber_._type")
type CategoryNumberTypeObject wraps Integer

@ExtendedMetaData(name="ConditionOperand_._type", kind="empty")
class ConditionOperandType {
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	org.eclipse.emf.ecore.xml.^type.String[1] name
	@ExtendedMetaData(kind="attribute", name="Number", namespace="##targetNamespace")
	unsettable NumberType[1] number
}

@ExtendedMetaData(name="Conditions_._type", kind="elementOnly")
class ConditionsType {
	@ExtendedMetaData(kind="element", name="Condition", namespace="##targetNamespace")
	contains ConditionType[1..3] condition
}

@ExtendedMetaData(name="Condition_._type", kind="elementOnly")
class ConditionType {
	@ExtendedMetaData(kind="element", name="ConditionOperand", namespace="##targetNamespace")
	contains ConditionOperandType[1] conditionOperand
	@ExtendedMetaData(kind="element", name="TriggeringStatus", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean[1] triggeringStatus
}

@ExtendedMetaData(name="DelayOperand_._type", kind="empty")
class DelayOperandType {
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	org.eclipse.emf.ecore.xml.^type.String[1] name
}

@ExtendedMetaData(name="Number_._type")
enum NumberType {
	_1 as "1"
	_2 as "2" = 1
	_3 as "3" = 2
}

@ExtendedMetaData(name="Number_._1_._type")
enum NumberType1 {
	_1 as "1"
	_2 as "2" = 1
	_3 as "3" = 2
}

@ExtendedMetaData(name="Number_._type:Object", baseType="Number_._type")
type NumberTypeObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="Number_._1_._type:Object", baseType="Number_._1_._type")
type NumberTypeObject1 wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="SpecificFieldText_._type", kind="elementOnly")
class SpecificFieldTextType {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="MultiLanguageText", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived MultiLanguageTextT[+] multiLanguageText
}

@ExtendedMetaData(name="SpecificField_._type", kind="elementOnly")
class SpecificFieldType {
	@ExtendedMetaData(kind="element", name="AssociatedValues", namespace="##targetNamespace")
	contains AssociatedValuesType associatedValues
	@ExtendedMetaData(kind="element", name="SpecificFieldText", namespace="##targetNamespace")
	contains SpecificFieldTextType specificFieldText
}

@ExtendedMetaData(name="SupervisedOperand_._type", kind="empty")
class SupervisedOperandType {
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	org.eclipse.emf.ecore.xml.^type.String[1] name
}

@ExtendedMetaData(name="Token_TE", baseType="http://www.eclipse.org/emf/2003/XMLType#string")
type TokenTE wraps String

@ExtendedMetaData(name="Type_._type")
enum TypeType {
	Action
	Interlock = 1
	Operand = 2
	Position = 3
	Reaction = 4
	MessageText = 5
	MessageError = 6
}

@ExtendedMetaData(name="Type_._1_._type")
enum TypeType1 {
	Action
	Interlock = 1
	Operand = 2
	Position = 3
	Reaction = 4
	MessageText = 5
	MessageError = 6
}

@ExtendedMetaData(name="Type_._type:Object", baseType="Type_._type")
type TypeTypeObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="Type_._1_._type:Object", baseType="Type_._1_._type")
type TypeTypeObject1 wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="VersionString_TP", baseType="http://www.eclipse.org/emf/2003/XMLType#string",
	pattern="[0-9]+(.[0-9]+){0,3}")
type VersionStringTP wraps String