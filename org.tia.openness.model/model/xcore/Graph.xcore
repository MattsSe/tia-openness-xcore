@Ecore(nsURI="http://www.tia.openness.model.org/schemas/SW/PlcBlocks/Graph")
@ExtendedMetaData(qualified="false")
@GenModel(modelDirectory="/org.tia.openness.model/src/main/xcore-gen", modelName="Openness",
	importerID="org.eclipse.xsd.ecore.importer")
package org.tia.openness.model.graph

import org.tia.openness.model.ladfbd.FlgNetT
import org.tia.openness.model.common.CommentT
import org.tia.openness.model.common.CommentType
import org.tia.openness.model.common.LineCommentT
import org.tia.openness.model.common.MultiLanguageTextT
import org.tia.openness.model.common.ProgrammingLanguageTE
import org.tia.openness.model.common.TokenT
import org.tia.openness.model.access.AccessT
import org.eclipse.emf.ecore.EFeatureMapEntry
import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.xml.^type.AnySimpleType
import org.eclipse.emf.ecore.xml.^type.Boolean
import org.eclipse.emf.ecore.xml.^type.Int
import org.eclipse.emf.ecore.xml.^type.String
import org.eclipse.emf.ecore.xml.^type.UnsignedShort

@ExtendedMetaData(name="Actions_T", kind="elementOnly")
class ActionsT {
	@ExtendedMetaData(kind="element", name="Title", namespace="##targetNamespace")
	contains CommentT title
	@ExtendedMetaData(kind="group", name="group:1")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Action", namespace="##targetNamespace", group="group:1")
	contains transient volatile derived ActionT[] action
}

@ExtendedMetaData(name="Event_TE")
enum EventTE {
	_ as ""
	A1 = 1
	L0 = 2
	L1 = 3
	R1 = 4
	S0 = 5
	S1 = 6
	V0 = 7
	V1 = 8
}
@ExtendedMetaData(name="Qualifier_TE")
enum QualifierTE {
	_ as ""
	CD = 1
	CR = 2
	CS = 3
	CU = 4
	D = 5
	L = 6
	N = 7
	ON = 8
	OFF = 9
	R = 10
	S = 11
	TD = 12
	TF = 13
	TL = 14
	TR = 15
}

@ExtendedMetaData(name="Action_T", kind="elementOnly")
class ActionT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Access", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived AccessT[] access
	@ExtendedMetaData(kind="element", name="Token", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived TokenT[] token
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived CommentType[] comment
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived LineCommentT[] lineComment
	@ExtendedMetaData(kind="attribute", name="Event", namespace="##targetNamespace")
	unsettable EventTE event
	@ExtendedMetaData(kind="attribute", name="Interlock", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean interlock
	@ExtendedMetaData(kind="attribute", name="Qualifier", namespace="##targetNamespace")
	unsettable QualifierTE qualifier
}
@ExtendedMetaData(name="AlarmCategory_T", kind="empty")
class AlarmCategoryT {
	@ExtendedMetaData(kind="attribute", name="Id", namespace="##targetNamespace")
	unsettable UnsignedShort[1] ^id
}

@ExtendedMetaData(name="AlarmsSettings_T", kind="elementOnly")
class AlarmsSettingsT {
	@ExtendedMetaData(kind="element", name="AlarmSupervisionCategories", namespace="##targetNamespace")
	contains AlarmSupervisionCategoriesT[1] alarmSupervisionCategories
	@ExtendedMetaData(kind="element", name="AlarmInterlockCategory", namespace="##targetNamespace")
	contains AlarmCategoryT[1] alarmInterlockCategory
	@ExtendedMetaData(kind="element", name="AlarmWarningCategory", namespace="##targetNamespace")
	contains AlarmCategoryT[1] alarmWarningCategory
}

@ExtendedMetaData(name="AlarmSupervisionCategories_T", kind="elementOnly")
class AlarmSupervisionCategoriesT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="AlarmSupervisionCategory", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived AlarmSupervisionCategoryT[] alarmSupervisionCategory
}

@ExtendedMetaData(name="AlarmSupervisionCategory_T", kind="elementOnly")
class AlarmSupervisionCategoryT {
	@GenModel(documentation="Enabler token")
	@ExtendedMetaData(kind="element", name="Token", namespace="##targetNamespace")
	contains TokenT token
	@ExtendedMetaData(kind="attribute", name="DisplayClass", namespace="##targetNamespace")
	unsettable DisplayClassType[1] displayClass
	@ExtendedMetaData(kind="attribute", name="Id", namespace="##targetNamespace")
	unsettable UnsignedShort[1] ^id
}

@ExtendedMetaData(name="AlarmSupportingLanguageModule_T", kind="elementOnly")
class AlarmSupportingLanguageModuleT {
	@ExtendedMetaData(kind="element", name="Title", namespace="##targetNamespace")
	contains CommentT title
	@ExtendedMetaData(kind="element", name="AlarmText", namespace="##targetNamespace")
	contains AlarmTextT alarmText
	@ExtendedMetaData(kind="element", name="FlgNet", namespace="##targetNamespace")
	contains FlgNetT[1] flgNet
	@ExtendedMetaData(kind="attribute", name="ProgrammingLanguage", namespace="##targetNamespace")
	unsettable ProgrammingLanguageTE[1] programmingLanguage
}

@ExtendedMetaData(name="AlarmText_T", kind="elementOnly")
class AlarmTextT {
	@GenModel(documentation="Temporary change for enable of empty alarm text because of the graph alarm handling reconstruction.")
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="MultiLanguageText", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived MultiLanguageTextT[] multiLanguageText
}

@ExtendedMetaData(name="Branches_T", kind="elementOnly")
class BranchesT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Branch", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived BranchT[] branch
}

@ExtendedMetaData(name="BranchRef_T", kind="empty")
class BranchRefT {
	@ExtendedMetaData(kind="attribute", name="In", namespace="##targetNamespace")
	unsettable Int in
	@ExtendedMetaData(kind="attribute", name="Number", namespace="##targetNamespace")
	unsettable Int[1] number
	@ExtendedMetaData(kind="attribute", name="Out", namespace="##targetNamespace")
	unsettable Int out
}

@ExtendedMetaData(name="Branch_T", kind="empty")
class BranchT {
	@ExtendedMetaData(kind="attribute", name="Cardinality", namespace="##targetNamespace")
	unsettable Int[1] cardinality
	@ExtendedMetaData(kind="attribute", name="Number", namespace="##targetNamespace")
	unsettable Int[1] number
	@ExtendedMetaData(kind="attribute", name="Type", namespace="##targetNamespace")
	unsettable BranchTE[1] ^type
}

@ExtendedMetaData(name="Branch_TE")
enum BranchTE {
	SimBegin
	SimEnd = 1
	AltBegin = 2
	AltEnd = 3
}

@ExtendedMetaData(name="Branch_TE:Object", baseType="Branch_TE")
type BranchTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="Connections_T", kind="elementOnly")
class ConnectionsT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Connection", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived ConnectionT[+] connection
}

@ExtendedMetaData(name="Connection_T", kind="elementOnly")
class ConnectionT {
	@ExtendedMetaData(kind="element", name="NodeFrom", namespace="##targetNamespace")
	contains NodeT[1] nodeFrom
	@ExtendedMetaData(kind="element", name="NodeTo", namespace="##targetNamespace")
	contains NodeT[1] nodeTo
	@ExtendedMetaData(kind="element", name="LinkType", namespace="##targetNamespace")
	unsettable LinkTE[1] linkType
}

@ExtendedMetaData(name="DisplayClass_._type", baseType="http://www.eclipse.org/emf/2003/XMLType#unsignedShort",
	minInclusive="0", maxInclusive="16")
type DisplayClassType wraps int

@ExtendedMetaData(name="DisplayClass_._type:Object", baseType="DisplayClass_._type")
type DisplayClassTypeObject wraps Integer

@ExtendedMetaData(name="Graph_T", kind="elementOnly")
class GraphT {
	@ExtendedMetaData(kind="element", name="PreOperations", namespace="##targetNamespace")
	contains PermanentOperationsT[1] preOperations
	@ExtendedMetaData(kind="element", name="Sequence", namespace="##targetNamespace")
	contains SequenceT[+] sequence
	@ExtendedMetaData(kind="element", name="PostOperations", namespace="##targetNamespace")
	contains PermanentOperationsT[1] postOperations
	@ExtendedMetaData(kind="element", name="AlarmsSettings", namespace="##targetNamespace")
	contains AlarmsSettingsT[1] alarmsSettings
}

@ExtendedMetaData(name="IdentCon_T", kind="empty")
class IdentConT {
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int[1] uId
}

@ExtendedMetaData(name="IdentRef_T", kind="elementOnly")
class IdentRefT {
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace")
	contains CommentType comment
	@ExtendedMetaData(kind="element", name="ViewInfo", namespace="##targetNamespace")
	contains ViewInfoT viewInfo
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable Int[1] uId
}

@ExtendedMetaData(name="Interlocks_T", kind="elementOnly")
class InterlocksT {
	@ExtendedMetaData(kind="element", name="Interlock", namespace="##targetNamespace")
	contains AlarmSupportingLanguageModuleT[1] interlock
}

@ExtendedMetaData(name="Link_TE")
enum LinkTE {
	Direct
	Jump = 1
}

@ExtendedMetaData(name="Link_TE:Object", baseType="Link_TE")
type LinkTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="Node_T", kind="elementOnly")
class NodeT {
	@ExtendedMetaData(kind="element", name="StepRef", namespace="##targetNamespace")
	contains StepRefT stepRef
	@ExtendedMetaData(kind="element", name="TransitionRef", namespace="##targetNamespace")
	contains TransitionRefT transitionRef
	@ExtendedMetaData(kind="element", name="BranchRef", namespace="##targetNamespace")
	contains BranchRefT branchRef
	@ExtendedMetaData(kind="element", name="EndConnection", namespace="##targetNamespace")
	contains EObject endConnection
}

@ExtendedMetaData(name="PermanentOperations_T", kind="elementOnly")
class PermanentOperationsT {
	@ExtendedMetaData(kind="element", name="Title", namespace="##targetNamespace")
	contains CommentT title
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace")
	contains CommentType comment
	@ExtendedMetaData(kind="element", name="PermanentOperation", namespace="##targetNamespace")
	contains PermanentOperationT[] permanentOperation
}

@ExtendedMetaData(name="PermanentOperation_T", kind="elementOnly")
class PermanentOperationT {
	@ExtendedMetaData(kind="element", name="Title", namespace="##targetNamespace")
	contains CommentT title
	@ExtendedMetaData(kind="element", name="FlgNet", namespace="##targetNamespace")
	contains FlgNetT flgNet
	@ExtendedMetaData(kind="attribute", name="ProgrammingLanguage", namespace="##targetNamespace")
	unsettable ProgrammingLanguageTE[1] programmingLanguage
}

@ExtendedMetaData(name="Sequence_T", kind="elementOnly")
class SequenceT {
	@ExtendedMetaData(kind="element", name="Title", namespace="##targetNamespace")
	contains CommentT title
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace")
	contains CommentType comment
	@ExtendedMetaData(kind="element", name="Steps", namespace="##targetNamespace")
	contains StepsT[1] steps
	@ExtendedMetaData(kind="element", name="Transitions", namespace="##targetNamespace")
	contains TransitionsT[1] transitions
	@ExtendedMetaData(kind="element", name="Branches", namespace="##targetNamespace")
	contains BranchesT[1] branches
	@ExtendedMetaData(kind="element", name="Connections", namespace="##targetNamespace")
	contains ConnectionsT[1] connections
}

@ExtendedMetaData(name="Supervisions_T", kind="elementOnly")
class SupervisionsT {
	@ExtendedMetaData(kind="element", name="Supervision", namespace="##targetNamespace")
	contains AlarmSupportingLanguageModuleT[1] supervision
}

@ExtendedMetaData(name="StepRef_T", kind="empty")
class StepRefT {
	@ExtendedMetaData(kind="attribute", name="Number", namespace="##targetNamespace")
	unsettable Int[1] number
}

@ExtendedMetaData(name="Steps_T", kind="elementOnly")
class StepsT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Step", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived StepT[+] step
}

@ExtendedMetaData(name="Step_T", kind="elementOnly")
class StepT {
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace")
	contains CommentType comment
	@ExtendedMetaData(kind="element", name="Actions", namespace="##targetNamespace")
	contains ActionsT[1] actions
	@ExtendedMetaData(kind="element", name="Supervisions", namespace="##targetNamespace")
	contains SupervisionsT[1] supervisions
	@ExtendedMetaData(kind="element", name="Interlocks", namespace="##targetNamespace")
	contains InterlocksT[1] interlocks
	@ExtendedMetaData(kind="attribute", name="Init", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean init = "false"
	@ExtendedMetaData(kind="attribute", name="IsMissing", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean isMissing = "false"
	@ExtendedMetaData(kind="attribute", name="MaximumStepTime", namespace="##targetNamespace")
	org.eclipse.emf.ecore.xml.^type.String maximumStepTime
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	AnySimpleType[1] name
	@ExtendedMetaData(kind="attribute", name="Number", namespace="##targetNamespace")
	unsettable Int[1] number
	@ExtendedMetaData(kind="attribute", name="WarningTime", namespace="##targetNamespace")
	org.eclipse.emf.ecore.xml.^type.String warningTime
}

@ExtendedMetaData(name="TransitionRef_T", kind="empty")
class TransitionRefT {
	@ExtendedMetaData(kind="attribute", name="Number", namespace="##targetNamespace")
	unsettable Int[1] number
}

@ExtendedMetaData(name="Transitions_T", kind="elementOnly")
class TransitionsT {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Transition", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived TransitionT[] transition
}

@ExtendedMetaData(name="Transition_T", kind="elementOnly")
class TransitionT {
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace")
	contains CommentType comment
	@ExtendedMetaData(kind="element", name="FlgNet", namespace="##targetNamespace")
	contains FlgNetT[1] flgNet
	@ExtendedMetaData(kind="attribute", name="IsMissing", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean isMissing = "false"
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	AnySimpleType[1] name
	@ExtendedMetaData(kind="attribute", name="Number", namespace="##targetNamespace")
	unsettable Int[1] number
	@ExtendedMetaData(kind="attribute", name="ProgrammingLanguage", namespace="##targetNamespace")
	unsettable ProgrammingLanguageTE[1] programmingLanguage
}

@ExtendedMetaData(name="ViewInfo_T", kind="empty")
class ViewInfoT {
	@ExtendedMetaData(kind="attribute", name="Height", namespace="##targetNamespace")
	unsettable Int height
	@ExtendedMetaData(kind="attribute", name="Start", namespace="##targetNamespace")
	unsettable org.eclipse.emf.ecore.xml.^type.Boolean start
	@ExtendedMetaData(kind="attribute", name="Width", namespace="##targetNamespace")
	unsettable Int width
	@ExtendedMetaData(kind="attribute", name="XPos", namespace="##targetNamespace")
	unsettable Int xPos
	@ExtendedMetaData(kind="attribute", name="YPos", namespace="##targetNamespace")
	unsettable Int yPos
}
