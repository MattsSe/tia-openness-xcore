@Ecore(nsURI="http://www.tia.openness.model.org/schemas/SW/PlcBlocks/Graph")
@ExtendedMetaData(qualified="false")
@GenModel(bundleManifest="false", forceOverwrite="true",modelDirectory="org.tia.openness.model/src/main/java-gen", modelName="Openness",
	prefix="Graph", importerID="org.eclipse.xsd.ecore.importer",updateClasspath="false", complianceLevel="8.0")
package org.tia.openness.model.graph

import org.tia.openness.model.ladfbd.FlgNet
import org.tia.openness.model.common.Comment
import org.tia.openness.model.common.Comment
import org.tia.openness.model.common.LineComment
import org.tia.openness.model.common.MultiLanguageText
import org.tia.openness.model.common.ProgrammingLanguageTE
import org.tia.openness.model.common.Token
import org.tia.openness.model.common.ViewInfo
import org.tia.openness.model.access.Access
import org.eclipse.emf.ecore.EFeatureMapEntry
import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.xml.^type.AnySimpleType

import org.eclipse.emf.ecore.xml.^type.UnsignedShort

@ExtendedMetaData(name="Actions", kind="elementOnly")
class Actions {
	@ExtendedMetaData(kind="element", name="Title", namespace="##targetNamespace")
	contains Comment title
	@ExtendedMetaData(kind="group", name="group:1")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Action", namespace="##targetNamespace", group="group:1")
	contains transient volatile derived Action[] action
}

@ExtendedMetaData(name="Event_TE")
enum EventTE {
	@ExtendedMetaData(name="_")
	NONE as ""
	A1 = 1
	L0 = 2
	L1 = 3
	R1 = 4
	S0 = 5
	S1 = 6
	V0 = 7
	V1 = 8
}
@ExtendedMetaData(name="Qualifier_TE")
enum QualifierTE {
	@ExtendedMetaData(name="_")
	NONE as ""
	CD = 1
	CR = 2
	CS = 3
	CU = 4
	D = 5
	L = 6
	N = 7
	ON = 8
	OFF = 9
	R = 10
	S = 11
	TD = 12
	TF = 13
	TL = 14
	TR = 15
}

@ExtendedMetaData(name="Action", kind="elementOnly")
class Action {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Access", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived Access[] access
	@ExtendedMetaData(kind="element", name="Token", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived Token[] token
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived Comment[] comment
	@GenModel(documentation="Not for LAD/FBD ")
	@ExtendedMetaData(kind="element", name="LineComment", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived LineComment[] lineComment
	@ExtendedMetaData(kind="attribute", name="Event", namespace="##targetNamespace")
	unsettable EventTE event
	@ExtendedMetaData(kind="attribute", name="Interlock", namespace="##targetNamespace")
	unsettable boolean interlock
	@ExtendedMetaData(kind="attribute", name="Qualifier", namespace="##targetNamespace")
	unsettable QualifierTE qualifier
}
@ExtendedMetaData(name="AlarmCategory", kind="empty")
class AlarmCategory {
	@ExtendedMetaData(kind="attribute", name="Id", namespace="##targetNamespace")
	unsettable UnsignedShort[1] ^id
}

@ExtendedMetaData(name="AlarmsSettings", kind="elementOnly")
class AlarmsSettings {
	@ExtendedMetaData(kind="element", name="AlarmSupervisionCategories", namespace="##targetNamespace")
	contains AlarmSupervisionCategories[1] alarmSupervisionCategories
	@ExtendedMetaData(kind="element", name="AlarmInterlockCategory", namespace="##targetNamespace")
	contains AlarmCategory[1] alarmInterlockCategory
	@ExtendedMetaData(kind="element", name="AlarmWarningCategory", namespace="##targetNamespace")
	contains AlarmCategory[1] alarmWarningCategory
}

@ExtendedMetaData(name="AlarmSupervisionCategories", kind="elementOnly")
class AlarmSupervisionCategories {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="AlarmSupervisionCategory", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived AlarmSupervisionCategory[] alarmSupervisionCategory
}

@ExtendedMetaData(name="AlarmSupervisionCategory", kind="elementOnly")
class AlarmSupervisionCategory {
	@GenModel(documentation="Enabler token")
	@ExtendedMetaData(kind="element", name="Token", namespace="##targetNamespace")
	contains Token token
	@ExtendedMetaData(kind="attribute", name="DisplayClass", namespace="##targetNamespace")
	unsettable DisplayClassType[1] displayClass
	@ExtendedMetaData(kind="attribute", name="Id", namespace="##targetNamespace")
	unsettable UnsignedShort[1] ^id
}

@ExtendedMetaData(name="AlarmSupportingLanguageModule", kind="elementOnly")
class AlarmSupportingLanguageModule {
	@ExtendedMetaData(kind="element", name="Title", namespace="##targetNamespace")
	contains Comment title
	@ExtendedMetaData(kind="element", name="AlarmText", namespace="##targetNamespace")
	contains AlarmText alarmText
	@ExtendedMetaData(kind="element", name="FlgNet", namespace="##targetNamespace")
	contains FlgNet[1] flgNet
	@ExtendedMetaData(kind="attribute", name="ProgrammingLanguage", namespace="##targetNamespace")
	unsettable ProgrammingLanguageTE[1] programmingLanguage
}

@ExtendedMetaData(name="AlarmText", kind="elementOnly")
class AlarmText {
	@GenModel(documentation="Temporary change for enable of empty alarm text because of the graph alarm handling reconstruction.")
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="MultiLanguageText", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived MultiLanguageText[] multiLanguageText
}

@ExtendedMetaData(name="Branches", kind="elementOnly")
class Branches {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Branch", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived Branch[] branch
}

@ExtendedMetaData(name="BranchRef", kind="empty")
class BranchRef {
	@ExtendedMetaData(kind="attribute", name="In", namespace="##targetNamespace")
	unsettable int in
	@ExtendedMetaData(kind="attribute", name="Number", namespace="##targetNamespace")
	unsettable int number
	@ExtendedMetaData(kind="attribute", name="Out", namespace="##targetNamespace")
	unsettable int out
}

@ExtendedMetaData(name="Branch", kind="empty")
class Branch {
	@ExtendedMetaData(kind="attribute", name="Cardinality", namespace="##targetNamespace")
	unsettable int cardinality
	@ExtendedMetaData(kind="attribute", name="Number", namespace="##targetNamespace")
	unsettable int number
	@ExtendedMetaData(kind="attribute", name="Type", namespace="##targetNamespace")
	unsettable BranchE[1] ^type
}

@ExtendedMetaData(name="Branch_TE")
enum BranchE {
	SimBegin
	SimEnd = 1
	AltBegin = 2
	AltEnd = 3
}

@ExtendedMetaData(name="Branch_TE:Object", baseType="Branch_TE")
type BranchEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="Connections", kind="elementOnly")
class Connections {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Connection", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived Connection[+] connection
}

@ExtendedMetaData(name="Connection", kind="elementOnly")
class Connection {
	@ExtendedMetaData(kind="element", name="NodeFrom", namespace="##targetNamespace")
	contains Node[1] nodeFrom
	@ExtendedMetaData(kind="element", name="Nodeo", namespace="##targetNamespace")
	contains Node[1] Nodeo
	@ExtendedMetaData(kind="element", name="LinkType", namespace="##targetNamespace")
	unsettable LinkTE[1] linkType
}

@ExtendedMetaData(name="DisplayClass_._type", baseType="http://www.eclipse.org/emf/2003/XMLType#unsignedShort",
	minInclusive="0", maxInclusive="16")
type DisplayClassType wraps int

@ExtendedMetaData(name="DisplayClass_._type:Object", baseType="DisplayClass_._type")
type DisplayClassTypeObject wraps Integer

@ExtendedMetaData(name="Graph", kind="elementOnly")
class Graph {
	@ExtendedMetaData(kind="element", name="PreOperations", namespace="##targetNamespace")
	contains PermanentOperations[1] preOperations
	@ExtendedMetaData(kind="element", name="Sequence", namespace="##targetNamespace")
	contains Sequence[+] sequence
	@ExtendedMetaData(kind="element", name="PostOperations", namespace="##targetNamespace")
	contains PermanentOperations[1] postOperations
	@ExtendedMetaData(kind="element", name="AlarmsSettings", namespace="##targetNamespace")
	contains AlarmsSettings[1] alarmsSettings
}

@ExtendedMetaData(name="IdentRef", kind="elementOnly")
class IdentRef {
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace")
	contains Comment comment
	@ExtendedMetaData(kind="element", name="ViewInfo", namespace="##targetNamespace")
	contains ViewInfo viewInfo
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable int uId
}

@ExtendedMetaData(name="Interlocks", kind="elementOnly")
class Interlocks {
	@ExtendedMetaData(kind="element", name="Interlock", namespace="##targetNamespace")
	contains AlarmSupportingLanguageModule[1] interlock
}

@ExtendedMetaData(name="Link_TE")
enum LinkTE {
	Direct
	Jump = 1
}

@ExtendedMetaData(name="Link_TE:Object", baseType="Link_TE")
type LinkTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="Node", kind="elementOnly")
class Node {
	@ExtendedMetaData(kind="element", name="StepRef", namespace="##targetNamespace")
	contains StepRef stepRef
	@ExtendedMetaData(kind="element", name="TransitionRef", namespace="##targetNamespace")
	contains TransitionRef transitionRef
	@ExtendedMetaData(kind="element", name="BranchRef", namespace="##targetNamespace")
	contains BranchRef branchRef
	@ExtendedMetaData(kind="element", name="EndConnection", namespace="##targetNamespace")
	contains EObject endConnection
}

@ExtendedMetaData(name="PermanentOperations", kind="elementOnly")
class PermanentOperations {
	@ExtendedMetaData(kind="element", name="Title", namespace="##targetNamespace")
	contains Comment title
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace")
	contains Comment comment
	@ExtendedMetaData(kind="element", name="PermanentOperation", namespace="##targetNamespace")
	contains PermanentOperation[] permanentOperation
}

@ExtendedMetaData(name="PermanentOperation", kind="elementOnly")
class PermanentOperation {
	@ExtendedMetaData(kind="element", name="Title", namespace="##targetNamespace")
	contains Comment title
	@ExtendedMetaData(kind="element", name="FlgNet", namespace="##targetNamespace")
	contains FlgNet flgNet
	@ExtendedMetaData(kind="attribute", name="ProgrammingLanguage", namespace="##targetNamespace")
	unsettable ProgrammingLanguageTE[1] programmingLanguage
}

@ExtendedMetaData(name="Sequence", kind="elementOnly")
class Sequence {
	@ExtendedMetaData(kind="element", name="Title", namespace="##targetNamespace")
	contains Comment title
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace")
	contains Comment comment
	@ExtendedMetaData(kind="element", name="Steps", namespace="##targetNamespace")
	contains Steps[1] steps
	@ExtendedMetaData(kind="element", name="Transitions", namespace="##targetNamespace")
	contains Transitions[1] transitions
	@ExtendedMetaData(kind="element", name="Branches", namespace="##targetNamespace")
	contains Branches[1] branches
	@ExtendedMetaData(kind="element", name="Connections", namespace="##targetNamespace")
	contains Connections[1] connections
}

@ExtendedMetaData(name="Supervisions", kind="elementOnly")
class Supervisions {
	@ExtendedMetaData(kind="element", name="Supervision", namespace="##targetNamespace")
	contains AlarmSupportingLanguageModule[1] supervision
}

@ExtendedMetaData(name="StepRef", kind="empty")
class StepRef {
	@ExtendedMetaData(kind="attribute", name="Number", namespace="##targetNamespace")
	unsettable int number
}

@ExtendedMetaData(name="Steps", kind="elementOnly")
class Steps {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Step", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived Step[+] step
}

@ExtendedMetaData(name="Step", kind="elementOnly")
class Step {
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace")
	contains Comment comment
	@ExtendedMetaData(kind="element", name="Actions", namespace="##targetNamespace")
	contains Actions[1] actions
	@ExtendedMetaData(kind="element", name="Supervisions", namespace="##targetNamespace")
	contains Supervisions[1] supervisions
	@ExtendedMetaData(kind="element", name="Interlocks", namespace="##targetNamespace")
	contains Interlocks[1] interlocks
	@ExtendedMetaData(kind="attribute", name="Init", namespace="##targetNamespace")
	unsettable boolean init = "false"
	@ExtendedMetaData(kind="attribute", name="IsMissing", namespace="##targetNamespace")
	unsettable boolean isMissing = "false"
	@ExtendedMetaData(kind="attribute", name="MaximumStepime", namespace="##targetNamespace")
	String maximumStepime
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	AnySimpleType[1] name
	@ExtendedMetaData(kind="attribute", name="Number", namespace="##targetNamespace")
	unsettable int number
	@ExtendedMetaData(kind="attribute", name="WarningTime", namespace="##targetNamespace")
	String warningTime
}

@ExtendedMetaData(name="TransitionRef", kind="empty")
class TransitionRef {
	@ExtendedMetaData(kind="attribute", name="Number", namespace="##targetNamespace")
	unsettable int number
}

@ExtendedMetaData(name="Transitions_T", kind="elementOnly")
class Transitions {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Transition", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived Transition[] transition
}

@ExtendedMetaData(name="Transition", kind="elementOnly")
class Transition {
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace")
	contains Comment comment
	@ExtendedMetaData(kind="element", name="FlgNet", namespace="##targetNamespace")
	contains FlgNet[1] flgNet
	@ExtendedMetaData(kind="attribute", name="IsMissing", namespace="##targetNamespace")
	unsettable boolean isMissing = "false"
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	AnySimpleType[1] name
	@ExtendedMetaData(kind="attribute", name="Number", namespace="##targetNamespace")
	unsettable int number
	@ExtendedMetaData(kind="attribute", name="ProgrammingLanguage", namespace="##targetNamespace")
	unsettable ProgrammingLanguageTE[1] programmingLanguage
}
