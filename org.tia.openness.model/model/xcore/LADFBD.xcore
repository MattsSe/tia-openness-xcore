@Ecore(nsURI="http://www.tia.openness.model.org/schemas/SW/PlcBlocks/LADFBD")
@ExtendedMetaData(qualified="false")
@GenModel(bundleManifest="false", forceOverwrite="true",modelDirectory="org.tia.openness.model/src/main/java-gen", modelName="Openness",
	importerID="org.eclipse.xsd.ecore.importer",updateClasspath="false", complianceLevel="8.0")
package org.tia.openness.model.ladfbd

import org.tia.openness.model.compileunit.LabelDeclaration
import org.tia.openness.model.common.Commentype
import org.tia.openness.model.common.VersionStringTP
import org.tia.openness.model.access.Access
import org.tia.openness.model.access.CallInfoype
import org.tia.openness.model.access.Instance
import org.tia.openness.model.access.NameType
import org.tia.openness.model.access.TemplateValue
import org.eclipse.emf.ecore.EFeatureMapEntry


@ExtendedMetaData(name="AutomaticTyped", kind="empty")
class AutomaticTyped {
	@GenModel(documentation="The name of the automatic chosen template parameter. Not for InstructionRef")
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	String name
}

@ExtendedMetaData(name="Call", kind="elementOnly")
class Call {
	@ExtendedMetaData(kind="element", name="CallInfo", namespace="##targetNamespace")
	contains CallInfoype[1] callInfo
	@ExtendedMetaData(kind="element", name="TemplateValue", namespace="##targetNamespace")
	contains TemplateValue[] templateValue
	@ExtendedMetaData(kind="element", name="AutomaticTyped", namespace="##targetNamespace")
	contains AutomaticTyped[] automaticTyped
	@GenModel(documentation="The invisible pins of this part.")
	@ExtendedMetaData(kind="element", name="Invisible", namespace="##targetNamespace")
	contains Invisible[] invisible
	@GenModel(documentation="The negated pins of this part.")
	@ExtendedMetaData(kind="element", name="Negated", namespace="##targetNamespace")
	contains Neg[] negated
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace")
	contains Commentype comment
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable int uId
}


@ExtendedMetaData(name="Equation", kind="simple")
class Equation {
	@ExtendedMetaData(name=":0", kind="simple")
	String value
}

@ExtendedMetaData(name="FlgNet", kind="elementOnly")
class FlgNet {
	@ExtendedMetaData(kind="element", name="Labels", namespace="##targetNamespace")
	contains Labels labels
	@ExtendedMetaData(kind="element", name="Parts", namespace="##targetNamespace")
	contains Parts[1] parts
	@ExtendedMetaData(kind="element", name="Wires", namespace="##targetNamespace")
	contains Wires wires
}

@ExtendedMetaData(name="Format_TE:Object", baseType="Format_TE")
type FormatTEObject wraps org.eclipse.emf.common.util.Enumerator

@ExtendedMetaData(name="GateName_TE", baseType="http://www.eclipse.org/emf/2003/XMLType#string")
type GateNameTE wraps String

@ExtendedMetaData(name="IdentCon", kind="empty")
class IdentCon {
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable int uId
}

@ExtendedMetaData(name="Invisible", kind="empty")
class Invisible {
	@GenModel(documentation="The name of the invisible pin.")
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	String name
}

@ExtendedMetaData(name="Labels", kind="elementOnly")
class Labels {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="LabelDeclaration", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived LabelDeclaration[] labelDeclaration
}

@ExtendedMetaData(name="NameCon", kind="empty")
class NameCon {
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	String name
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable int uId
}

@ExtendedMetaData(name="Neg", kind="empty")
class Neg {
	@GenModel(documentation="The name of the negated pin.")
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	String name
}

@ExtendedMetaData(name="Openbranch", kind="empty")
class Openbranch {
}

@ExtendedMetaData(name="OpenCon", kind="empty")
class OpenCon {
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable int uId
}

@ExtendedMetaData(name="Parts", kind="elementOnly")
class Parts {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Access", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived Access[] access
	@ExtendedMetaData(kind="element", name="Part", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived Part[] part
	@ExtendedMetaData(kind="element", name="Call", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived Call[] call
}

@ExtendedMetaData(name="Part", kind="elementOnly")
class Part {
	@GenModel(documentation="The equation of this part. This is only used for the Calculate box.")
	@ExtendedMetaData(kind="element", name="Equation", namespace="##targetNamespace")
	contains Equation equation
	@ExtendedMetaData(kind="element", name="Instance", namespace="##targetNamespace")
	contains Instance instance
	@ExtendedMetaData(kind="element", name="TemplateValue", namespace="##targetNamespace")
	contains TemplateValue[] templateValue
	@ExtendedMetaData(kind="element", name="AutomaticTyped", namespace="##targetNamespace")
	contains AutomaticTyped[] automaticTyped
	@GenModel(documentation="The invisible pins of this part.")
	@ExtendedMetaData(kind="element", name="Invisible", namespace="##targetNamespace")
	contains Invisible[] invisible
	@GenModel(documentation="The negated pins of this part.")
	@ExtendedMetaData(kind="element", name="Negated", namespace="##targetNamespace")
	contains Neg[] negated
	@GenModel(documentation="Not allowed in STL")
	@ExtendedMetaData(kind="element", name="Comment", namespace="##targetNamespace")
	contains Commentype comment
	@ExtendedMetaData(kind="attribute", name="DisabledENO", namespace="##targetNamespace")
	unsettable boolean disabledENO = "false"
	@ExtendedMetaData(kind="attribute", name="Name", namespace="##targetNamespace")
	NameType[1] name
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable int uId
	@ExtendedMetaData(kind="attribute", name="Version", namespace="##targetNamespace")
	VersionStringTP version
}

@ExtendedMetaData(name="Powerrail", kind="empty")
class Powerrail {
}
@ExtendedMetaData(name="Wires", kind="elementOnly")
class Wires {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Wire", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived Wire[+] wire
}

@ExtendedMetaData(name="Wire", kind="elementOnly")
class Wire {
	@ExtendedMetaData(kind="group", name="group:0")
	EFeatureMapEntry[] group
	@ExtendedMetaData(kind="element", name="Powerrail", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived Powerrail[] powerrail
	@ExtendedMetaData(kind="element", name="NameCon", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived NameCon[] nameCon
	@ExtendedMetaData(kind="element", name="IdentCon", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived IdentCon[] identCon
	@ExtendedMetaData(kind="element", name="Openbranch", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived Openbranch[] openbranch
	@ExtendedMetaData(kind="element", name="OpenCon", namespace="##targetNamespace", group="group:0")
	contains transient volatile derived OpenCon[] openCon
	@ExtendedMetaData(kind="attribute", name="UId", namespace="##targetNamespace")
	unsettable int uId
}
