dependencies {
    testImplementation "junit:junit:$versions.junit"
    implementation "org.eclipse.xtext:org.eclipse.xtext.xbase:$versions.xtext"
    implementation 'org.eclipse.emf:org.eclipse.emf.ecore.xcore.lib:1.1+'

    xtextLanguages 'org.eclipse.emf:org.eclipse.emf.mwe2.runtime:2.9.1.201705291010'
    xtextLanguages 'org.eclipse.emf:org.eclipse.emf.ecore.xcore:1.3.1'
    xtextLanguages 'org.eclipse.emf:org.eclipse.emf.ecore.xcore.lib:1.1+'
    xtextLanguages 'org.eclipse.emf:org.eclipse.emf.codegen:2.11.0'
    xtextLanguages 'org.eclipse.emf:org.eclipse.emf.codegen.ecore:2.12.0'
    xtextLanguages 'org.eclipse.emf:org.eclipse.emf.codegen.ecore.xtext:1.2.0'
    xtextLanguages "org.eclipse.xtext:org.eclipse.xtext.ecore:$versions.xtext"
}

sourceSets {
    main {
        java.srcDirs = ['src/main/java', 'src-gen']
        resources.srcDirs = ['src/main/resources', 'src-gen']
        xtendOutputDir = 'xtend-gen'
        resources {
            exclude '**/*.xcore'
        }
    }
    test {
        java.srcDirs = ['src/test/java', 'src/test/xtext-gen']
        resources.srcDirs = ['src/test/resources', 'src/test/xtext-gen']
        xtendOutputDir = 'src/test/xtend-gen'
    }
}
jar {
    from('model') {
        into('model')
    }
    manifest {
        attributes 'Bundle-SymbolicName': project.name
    }
}

xtext {
    version = "${versions.xtext}"
    languages {
        ecore {
            setup = 'org.eclipse.xtext.ecore.EcoreSupport'
        }
        codegen {
            setup = 'org.eclipse.emf.codegen.ecore.xtext.GenModelSupport'
        }
        xcore {
            setup = 'org.eclipse.emf.ecore.xcore.XcoreStandaloneSetup'
            generator.outlet.producesJava = true
        }
    }
}